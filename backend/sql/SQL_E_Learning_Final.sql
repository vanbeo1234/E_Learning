-- TẠO CƠ SỞ DỮ LIỆU
CREATE DATABASE E_LEARNING;
USE E_LEARNING;

-- BẢNG ROLE (DANH SÁCH CÁC VAI TRÒ)
CREATE TABLE ROLE (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ROLE_NAME NVARCHAR(50) NOT NULL
);

CREATE TABLE STATUS_MANAGEMENT (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    STATUS_CODE NVARCHAR(20) NOT NULL, 
    TYPE NVARCHAR(20) NOT NULL, -- LOẠI TRẠNG THÁI (USER, COURSE, REQUEST)
    DESCRIPTION NVARCHAR(255) NULL -- MÔ TẢ TRẠNG THÁI
);

CREATE TABLE USER (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    USER_CODE NVARCHAR(50) UNIQUE NOT NULL, 
    ENCRYPTION_KEY NVARCHAR(255) NULL,
    NAME NVARCHAR(255) NOT NULL,
    EMAIL NVARCHAR(255) UNIQUE NOT NULL,
    PASSWORD NVARCHAR(255) NOT NULL,
    PHONE NVARCHAR(20),
    ADDRESS NVARCHAR(255),
    GENDER INT(1) NOT NULL DEFAULT 0, 
    DATE_OF_BIRTH DATETIME NULL,
    ROLE_ID INT NOT NULL,
    STATUS_CODE NVARCHAR(20) NOT NULL,
    EXPERIENCE INT NULL,
    CERTIFICATION NVARCHAR(255) NULL,
    CREATED_BY NVARCHAR(50) NULL,
    UPDATED_BY NVARCHAR(50) NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ID) ON DELETE CASCADE
);
DESCRIBE user;

ALTER TABLE USER
MODIFY COLUMN ENCRYPTION_KEY NVARCHAR(1000);
CREATE TABLE SYSTEM_FUNCTION (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    FUNCTION_NAME NVARCHAR(255) NOT NULL,
    DESCRIPTION NVARCHAR(255) NULL
);
 
CREATE TABLE ROLE_FUNCTION (
    ROLE_ID INT,
    FUNCTION_ID INT,
    PRIMARY KEY (ROLE_ID, FUNCTION_ID),
    FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ID) ON DELETE CASCADE,
    FOREIGN KEY (FUNCTION_ID) REFERENCES SYSTEM_FUNCTION(ID) ON DELETE CASCADE
);

-- BẢNG COURSE (LƯU THÔNG TIN KHÓA HỌC)
CREATE TABLE COURSE (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    COURSE_CODE NVARCHAR(20) NOT NULL,
    COURSE_NAME NVARCHAR(255) NOT NULL,
    DESCRIPTION NVARCHAR(255),
    LEARNING_OUTCOME TEXT NULL,
    BACKGROUND_IMG TEXT NULL,
    START_DATE DATETIME,
    END_DATE DATETIME,
    LESSON_COUNT INT NOT NULL DEFAULT 0,
    STATUS_CODE NVARCHAR(20) NOT NULL,
    CREATED_BY NVARCHAR(50) NULL,
    UPDATED_BY NVARCHAR(50) NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- SỬA BẢNG COURSE_DETAIL ĐỂ LƯU DANH SÁCH VIDEO DƯỚI DẠNG JSON
CREATE TABLE LESSON_DETAIL (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    LESSON_CODE NVARCHAR(20) NOT NULL,
    COURSE_ID INT NOT NULL,
    LESSON_ORDER INT NOT NULL,
    LESSON_NAME NVARCHAR(255) NOT NULL,
    VIDEO_LINK TEXT NULL,
    RESOURCE_LINK TEXT NULL,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(ID) ON DELETE CASCADE
);

-- BẢNG CHAT_MESSAGE
CREATE TABLE LESSON_COMMENT (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    COURSE_CODE NVARCHAR(20) NOT NULL,
    LESSON_ID INT NULL,
SEND_USER_ID NVARCHAR(50) NOT NULL,
    MESSAGE NVARCHAR(300) NOT NULL,
    COMMENT_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (LESSON_ID) REFERENCES LESSON_DETAIL(ID) ON DELETE CASCADE,
    FOREIGN KEY (SEND_USER_ID) REFERENCES USER(USER_CODE) ON DELETE CASCADE
);

CREATE TABLE INSTRUCTOR_ENROLLMENT (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    INSTRUCTOR_ID INT NOT NULL,
    COURSE_ID INT NOT NULL,
    FOREIGN KEY (INSTRUCTOR_ID) REFERENCES USER(ID) ON DELETE CASCADE,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(ID) ON DELETE CASCADE
);

CREATE TABLE STUDENT_ENROLLMENT (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    STUDENT_ID INT NOT NULL,
    COURSE_ID INT NOT NULL,
    ENROLLMENT_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PROGRESS_PERCENTAGE INT NOT NULL DEFAULT 0,
    NOTE NVARCHAR(255) NULL,
    FOREIGN KEY (STUDENT_ID) REFERENCES USER(ID) ON DELETE CASCADE,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(ID) ON DELETE CASCADE
);

CREATE TABLE NOTIFICATION (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    COURSE_ID INT NOT NULL, 
    MESSAGE NVARCHAR(255) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(ID) ON DELETE CASCADE 
);

-- ------------------------------------------------------------------------------------------------------------------
-- Thêm dữ liệu vào bảng Role
INSERT INTO Role (Role_Name) VALUES ('Admin'), ('Instructor'), ('Student');

-- Thêm dữ liệu vào bảng Status_Management
INSERT INTO Status_Management (Status_Code, Type, Description) VALUES
('ACTIVE', 'User', 'Người dùng đang hoạt động'),
('INACTIVE', 'User', 'Người dùng bị khóa'),
('ACTIVE', 'Course', 'Khóa học đang mở'),
('INACTIVE', 'Course', 'Khóa học bị đóng');

-- ------------------------------------------------------------------------------------------------------------------
-- Admin
INSERT INTO USER (USER_CODE, NAME, EMAIL, PASSWORD, PHONE, ADDRESS, GENDER, DATE_OF_BIRTH, ROLE_ID, STATUS_CODE)
VALUES 
('ADMIN001', 'Nguyễn Văn Admin', 'admin@edu.vn', 'admin123', '0909123456', 'Hà Nội', 1, '1985-01-01', 1, 'ACTIVE');

INSERT INTO USER (USER_CODE,NAME,EMAIL,PASSWORD,PHONE,ADDRESS,GENDER,DATE_OF_BIRTH,ROLE_ID,STATUS_CODE,CREATED_BY) 
VALUES ('admin002','Second Admin','admin2@example.com','$2a$10$SEHzzyRjaQGLHZa2c9mWce9ubebMIBzG2GCn2h2tYPv8pR9tTeMqy','0987654321','Admin HQ',1,'1995-02-20',1,'ACTIVE','SYSTEM');

-- Instructor
INSERT INTO USER (USER_CODE, NAME, EMAIL, PASSWORD, PHONE, ADDRESS, GENDER, DATE_OF_BIRTH, ROLE_ID, STATUS_CODE, EXPERIENCE, CERTIFICATION)
VALUES 
('GV001', 'Trần Thị Giảng Viên', 'instructor1@edu.vn', 'gv123', '0911222333', 'TP.HCM', 0, '1990-03-05', 2, 'ACTIVE', 5, 'Giảng viên CNTT');

INSERT INTO USER (USER_CODE, NAME, EMAIL, PASSWORD, PHONE, ADDRESS, GENDER, DATE_OF_BIRTH, ROLE_ID, STATUS_CODE, EXPERIENCE, CERTIFICATION)
VALUES