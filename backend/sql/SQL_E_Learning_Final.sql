-- TẠO CƠ SỞ DỮ LIỆU
CREATE DATABASE E_LEARNING;
USE E_LEARNING;

-- BẢNG ROLE (DANH SÁCH CÁC VAI TRÒ)
CREATE TABLE ROLE (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ROLE_NAME NVARCHAR(50) NOT NULL
);

CREATE TABLE STATUS_MANAGEMENT (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    STATUS_CODE NVARCHAR(20) NOT NULL, 
    TYPE NVARCHAR(20) NOT NULL, -- LOẠI TRẠNG THÁI (USER, COURSE, REQUEST)
    DESCRIPTION NVARCHAR(255) NULL -- MÔ TẢ TRẠNG THÁI
);

CREATE TABLE USER (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    USER_CODE NVARCHAR(50) UNIQUE NOT NULL, 
    ENCRYPTION_KEY NVARCHAR(255) NULL,
    NAME NVARCHAR(255) NOT NULL,
    EMAIL NVARCHAR(255) UNIQUE NOT NULL,
    PASSWORD NVARCHAR(255) NOT NULL,
    PHONE NVARCHAR(20),
    ADDRESS NVARCHAR(255),
    GENDER INT(1) NOT NULL DEFAULT 0, 
    DATE_OF_BIRTH DATETIME NULL,
    ROLE_ID INT NOT NULL,
    STATUS_CODE NVARCHAR(20) NOT NULL,
    EXPERIENCE INT NULL,
    CERTIFICATION NVARCHAR(255) NULL,
    CREATED_BY NVARCHAR(50) NULL,
    UPDATED_BY NVARCHAR(50) NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ID) ON DELETE CASCADE
);
DESCRIBE user;

ALTER TABLE USER
MODIFY COLUMN ENCRYPTION_KEY NVARCHAR(1000);
CREATE TABLE SYSTEM_FUNCTION (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    FUNCTION_NAME NVARCHAR(255) NOT NULL,
    DESCRIPTION NVARCHAR(255) NULL
);
 
CREATE TABLE ROLE_FUNCTION (
    ROLE_ID INT,
    FUNCTION_ID INT,
    PRIMARY KEY (ROLE_ID, FUNCTION_ID),
    FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ID) ON DELETE CASCADE,
    FOREIGN KEY (FUNCTION_ID) REFERENCES SYSTEM_FUNCTION(ID) ON DELETE CASCADE
);

-- BẢNG COURSE (LƯU THÔNG TIN KHÓA HỌC)
CREATE TABLE COURSE (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    COURSE_CODE NVARCHAR(20) NOT NULL,
    COURSE_NAME NVARCHAR(255) NOT NULL,
    DESCRIPTION NVARCHAR(255),
    LEARNING_OUTCOME TEXT NULL,
    BACKGROUND_IMG TEXT NULL,
    START_DATE DATETIME,
    END_DATE DATETIME,
    LESSON_COUNT INT NOT NULL DEFAULT 0,
    STATUS_CODE NVARCHAR(20) NOT NULL,
    CREATED_BY NVARCHAR(50) NULL,
    UPDATED_BY NVARCHAR(50) NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- SỬA BẢNG COURSE_DETAIL ĐỂ LƯU DANH SÁCH VIDEO DƯỚI DẠNG JSON
CREATE TABLE LESSON_DETAIL (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    LESSON_CODE NVARCHAR(20) NOT NULL,
    COURSE_ID INT NOT NULL,
    LESSON_ORDER INT NOT NULL,
    LESSON_NAME NVARCHAR(255) NOT NULL,
    VIDEO_LINK TEXT NULL,
    RESOURCE_LINK TEXT NULL,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(ID) ON DELETE CASCADE
);

-- BẢNG CHAT_MESSAGE
CREATE TABLE LESSON_COMMENT (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    COURSE_CODE NVARCHAR(20) NOT NULL,
    LESSON_ID INT NULL,
    SEND_USER_ID NVARCHAR(50) NOT NULL,
    MESSAGE NVARCHAR(300) NOT NULL,
    COMMENT_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (LESSON_ID) REFERENCES LESSON_DETAIL(ID) ON DELETE CASCADE,
    FOREIGN KEY (SEND_USER_ID) REFERENCES USER(USER_CODE) ON DELETE CASCADE
);

CREATE TABLE INSTRUCTOR_ENROLLMENT (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    INSTRUCTOR_ID INT NOT NULL,
    COURSE_ID INT NOT NULL,
    FOREIGN KEY (INSTRUCTOR_ID) REFERENCES USER(ID) ON DELETE CASCADE,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(ID) ON DELETE CASCADE
);

CREATE TABLE STUDENT_ENROLLMENT (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    STUDENT_ID INT NOT NULL,
    COURSE_ID INT NOT NULL,
    ENROLLMENT_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PROGRESS_PERCENTAGE INT NOT NULL DEFAULT 0,
    NOTE NVARCHAR(255) NULL,
    FOREIGN KEY (STUDENT_ID) REFERENCES USER(ID) ON DELETE CASCADE,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(ID) ON DELETE CASCADE
);

CREATE TABLE NOTIFICATION (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    COURSE_ID INT NOT NULL, 
    MESSAGE NVARCHAR(255) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(ID) ON DELETE CASCADE 
);

-- ------------------------------------------------------------------------------------------------------------------
-- Thêm dữ liệu vào bảng Role
INSERT INTO Role (Role_Name) VALUES ('Admin'), ('Instructor'), ('Student');

-- Thêm dữ liệu vào bảng Status_Management
INSERT INTO Status_Management (Status_Code, Type, Description) VALUES
('ACTIVE', 'User', 'Người dùng đang hoạt động'),
('INACTIVE', 'User', 'Người dùng bị khóa'),
('ACTIVE', 'Course', 'Khóa học đang mở'),
('INACTIVE', 'Course', 'Khóa học bị đóng');

-- ------------------------------------------------------------------------------------------------------------------
-- Admin
INSERT INTO USER (USER_CODE, NAME, EMAIL, PASSWORD, PHONE, ADDRESS, GENDER, DATE_OF_BIRTH, ROLE_ID, STATUS_CODE)
VALUES 
('ADMIN001', 'Nguyễn Văn Admin', 'admin@edu.vn', 'admin123', '0909123456', 'Hà Nội', 1, '1985-01-01', 1, 'ACTIVE');

INSERT INTO USER (USER_CODE,NAME,EMAIL,PASSWORD,PHONE,ADDRESS,GENDER,DATE_OF_BIRTH,ROLE_ID,STATUS_CODE,CREATED_BY) 
VALUES ('admin002','Second Admin','admin2@example.com','$2a$10$SEHzzyRjaQGLHZa2c9mWce9ubebMIBzG2GCn2h2tYPv8pR9tTeMqy','0987654321','Admin HQ',1,'1995-02-20',1,'ACTIVE','SYSTEM');

-- Instructor
INSERT INTO USER (USER_CODE, NAME, EMAIL, PASSWORD, PHONE, ADDRESS, GENDER, DATE_OF_BIRTH, ROLE_ID, STATUS_CODE, EXPERIENCE, CERTIFICATION)
VALUES 
('GV001', 'Trần Thị Giảng Viên', 'instructor1@edu.vn', 'gv123', '0911222333', 'TP.HCM', 0, '1990-03-05', 2, 'ACTIVE', 5, 'Giảng viên CNTT');

INSERT INTO USER (USER_CODE, NAME, EMAIL, PASSWORD, PHONE, ADDRESS, GENDER, DATE_OF_BIRTH, ROLE_ID, STATUS_CODE, EXPERIENCE, CERTIFICATION)
VALUES 
('GV002', 'Phạm Minh Khoa', 'khoa.pham@edu.vn', 'gv456', '0911333444', 'Bình Dương', 1, '1988-07-15', 2, 'ACTIVE', 8, 'Thạc sĩ Khoa học máy tính');

-- Student
INSERT INTO USER (USER_CODE, NAME, EMAIL, PASSWORD, PHONE, ADDRESS, GENDER, DATE_OF_BIRTH, ROLE_ID, STATUS_CODE)
VALUES 
('SV001', 'Lê Văn Học Viên', 'student1@edu.vn', 'sv123', '0988777666', 'Đà Nẵng', 1, '2002-09-10', 3, 'ACTIVE'),
('SV002', 'Nguyễn Thị Sinh Viên', 'student2@edu.vn', 'sv456', '0977333444', 'Cần Thơ', 0, '2003-06-20', 3, 'ACTIVE');

-- ----------------------------------------------------------
-- Khóa học: Lập trình C#
INSERT INTO COURSE (COURSE_CODE, COURSE_NAME, DESCRIPTION, LEARNING_OUTCOME, BACKGROUND_IMG, START_DATE, END_DATE, LESSON_COUNT, STATUS_CODE, CREATED_BY)
VALUES 
('C001', 'Lập trình C# cơ bản', 'Học C# từ đầu đến hướng đối tượng', 'Nắm được cú pháp, lập trình hướng đối tượng trong C#', NULL, '2025-05-01', '2025-06-30', 3, 'ACTIVE', 'GV001');

INSERT INTO COURSE (COURSE_CODE, COURSE_NAME, DESCRIPTION, LEARNING_OUTCOME, BACKGROUND_IMG, START_DATE, END_DATE, LESSON_COUNT, STATUS_CODE, CREATED_BY)
VALUES 
('C002', 'Lập trình Python cho người mới bắt đầu', 'Khóa học nhập môn lập trình với Python', 
'Hiểu được cú pháp cơ bản, làm quen với biến, hàm, và xử lý tệp trong Python', NULL, 
'2025-07-01', '2025-08-15', 2, 'ACTIVE', 'GV002');

-- ----------------------------------------------------------
-- Gán giảng viên cho khóa học
INSERT INTO INSTRUCTOR_ENROLLMENT (INSTRUCTOR_ID, COURSE_ID)
SELECT ID, 1 FROM USER WHERE USER_CODE = 'GV001';

INSERT INTO INSTRUCTOR_ENROLLMENT (INSTRUCTOR_ID, COURSE_ID)
SELECT ID, (SELECT ID FROM COURSE WHERE COURSE_CODE = 'C002')
FROM USER WHERE USER_CODE = 'GV002';

-- ------------------------------------------------------------
-- Thêm bài giảng cho khóa học Lập trình C#
INSERT INTO LESSON_DETAIL (LESSON_CODE, COURSE_ID, LESSON_ORDER, LESSON_NAME, VIDEO_LINK)
VALUES 
('LS001', 1, 1, 'Giới thiệu về C#', 'https://youtube.com/video1'),
('LS002', 1, 2, 'Biến, kiểu dữ liệu và toán tử', 'https://youtube.com/video2'),
('LS003', 1, 3, 'Lập trình hướng đối tượng', 'https://youtube.com/video3');

INSERT INTO LESSON_DETAIL (LESSON_CODE, COURSE_ID, LESSON_ORDER, LESSON_NAME, VIDEO_LINK)
VALUES 
('PY001', (SELECT ID FROM COURSE WHERE COURSE_CODE = 'C002'), 1, 'Giới thiệu về Python', 'https://youtube.com/python1'),
('PY002', (SELECT ID FROM COURSE WHERE COURSE_CODE = 'C002'), 2, 'Cấu trúc điều khiển', 'https://youtube.com/python2');

-- ----------------------------------------------------------------
INSERT INTO STUDENT_ENROLLMENT (STUDENT_ID, COURSE_ID)
SELECT ID, 1 FROM USER WHERE USER_CODE = 'SV001';

INSERT INTO STUDENT_ENROLLMENT (STUDENT_ID, COURSE_ID)
SELECT ID, 1 FROM USER WHERE USER_CODE = 'SV002';

INSERT INTO STUDENT_ENROLLMENT (STUDENT_ID, COURSE_ID)
SELECT ID, (SELECT ID FROM COURSE WHERE COURSE_CODE = 'C002')
FROM USER WHERE USER_CODE IN ('SV001', 'SV002');

-- -----------------------------------------------------------------
-- Kiểm tra số lượng bài giảng đúng trong khóa học
SELECT COURSE_NAME, LESSON_COUNT, COUNT(L.ID) AS LESSON_REAL_COUNT
FROM COURSE C
LEFT JOIN LESSON_DETAIL L ON C.ID = L.COURSE_ID
GROUP BY C.ID;

-- Kiểm tra danh sách học viên đã ghi danh
SELECT U.NAME AS STUDENT_NAME, C.COURSE_NAME
FROM STUDENT_ENROLLMENT S
JOIN USER U ON S.STUDENT_ID = U.ID
JOIN COURSE C ON S.COURSE_ID = C.ID;

-- ------------------------------------------------------------------------------------------------------------------------
-- SV001 bình luận vào khóa học C001
INSERT INTO LESSON_COMMENT (COURSE_CODE, LESSON_ID, SEND_USER_ID, MESSAGE)
VALUES 
('C001', 1, 'SV001', 'Bài học rất dễ hiểu, cảm ơn thầy cô!');

-- SV002 bình luận vào bài học 2
INSERT INTO LESSON_COMMENT (COURSE_CODE, LESSON_ID, SEND_USER_ID, MESSAGE)
VALUES 
('C001', 2, 'SV002', 'Phần ví dụ thực tế rất hay ạ.');

-- SV001 bình luận vào bài học 3
INSERT INTO LESSON_COMMENT (COURSE_CODE, LESSON_ID, SEND_USER_ID, MESSAGE)
VALUES 
('C001', 3, 'SV001', 'Em chưa hiểu rõ phần class và object.');

-- SV002 bình luận vào bài học 1
INSERT INTO LESSON_COMMENT (COURSE_CODE, LESSON_ID, SEND_USER_ID, MESSAGE)
VALUES 
('C001', 1, 'SV002', 'C# có khó hơn JavaScript không thầy?');


select * from user
select * from course
