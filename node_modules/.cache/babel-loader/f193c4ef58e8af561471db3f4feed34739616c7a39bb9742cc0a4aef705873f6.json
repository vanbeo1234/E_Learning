{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { colorPropType } from '../../props.js';\nvar CNavbar = forwardRef(function (_a, ref) {\n  var _b;\n  var children = _a.children,\n    _c = _a.as,\n    Component = _c === undefined ? 'nav' : _c,\n    className = _a.className,\n    color = _a.color,\n    colorScheme = _a.colorScheme,\n    container = _a.container,\n    expand = _a.expand,\n    placement = _a.placement,\n    rest = __rest(_a, [\"children\", \"as\", \"className\", \"color\", \"colorScheme\", \"container\", \"expand\", \"placement\"]);\n  return React.createElement(Component, __assign({\n    className: classNames('navbar', (_b = {}, _b[\"bg-\".concat(color)] = color, _b[typeof expand === 'boolean' ? 'navbar-expand' : \"navbar-expand-\".concat(expand)] = expand, _b), placement, className)\n  }, colorScheme && {\n    'data-coreui-theme': colorScheme\n  }, rest, {\n    ref: ref\n  }), container ? React.createElement(\"div\", {\n    className: typeof container === 'string' ? \"container-\".concat(container) : 'container'\n  }, children) : React.createElement(React.Fragment, null, children));\n});\nCNavbar.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  colorScheme: PropTypes.oneOf(['dark', 'light']),\n  container: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['sm', 'md', 'lg', 'xl', 'xxl', 'fluid'])]),\n  expand: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['sm', 'md', 'lg', 'xl', 'xxl'])]),\n  placement: PropTypes.oneOf(['fixed-top', 'fixed-bottom', 'sticky-top'])\n};\nCNavbar.displayName = 'CNavbar';\nexport { CNavbar };","map":{"version":3,"names":["CNavbar","forwardRef","_a","ref","children","_c","as","Component","undefined","className","color","colorScheme","container","expand","placement","rest","__rest","React","createElement","__assign","classNames","_b","concat","Fragment","propTypes","PropTypes","elementType","node","string","colorPropType","oneOf","oneOfType","bool","displayName"],"sources":["C:\\Users\\nqminh7\\Downloads\\Hoanthien\\E_Learning\\node_modules\\@coreui\\react\\src\\components\\navbar\\CNavbar.tsx"],"sourcesContent":["import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\nexport interface CNavbarProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUIâ€™s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Sets if the color of text should be colored for a light or dark background.\n   */\n  colorScheme?: 'dark' | 'light'\n  /**\n   * Defines optional container wrapping children elements.\n   */\n  container?: boolean | 'sm' | 'md' | 'lg' | 'xl' | 'xxl' | 'fluid'\n  /**\n   * Defines the responsive breakpoint to determine when content collapses.\n   */\n  expand?: boolean | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\n  /**\n   * Place component in non-static positions.\n   */\n  placement?: 'fixed-top' | 'fixed-bottom' | 'sticky-top'\n}\n\nexport const CNavbar: PolymorphicRefForwardingComponent<'nav', CNavbarProps> = forwardRef<\n  HTMLDivElement,\n  CNavbarProps\n>(\n  (\n    {\n      children,\n      as: Component = 'nav',\n      className,\n      color,\n      colorScheme,\n      container,\n      expand,\n      placement,\n      ...rest\n    },\n    ref,\n  ) => {\n    return (\n      <Component\n        className={classNames(\n          'navbar',\n          {\n            [`bg-${color}`]: color,\n            [typeof expand === 'boolean' ? 'navbar-expand' : `navbar-expand-${expand}`]: expand,\n          },\n          placement,\n          className,\n        )}\n        {...(colorScheme && { 'data-coreui-theme': colorScheme })}\n        {...rest}\n        ref={ref}\n      >\n        {container ? (\n          <div className={typeof container === 'string' ? `container-${container}` : 'container'}>\n            {children}\n          </div>\n        ) : (\n          <>{children}</>\n        )}\n      </Component>\n    )\n  },\n)\n\nCNavbar.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  colorScheme: PropTypes.oneOf(['dark', 'light']),\n  container: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf<'sm' | 'md' | 'lg' | 'xl' | 'xxl' | 'fluid'>([\n      'sm',\n      'md',\n      'lg',\n      'xl',\n      'xxl',\n      'fluid',\n    ]),\n  ]),\n  expand: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf<'sm' | 'md' | 'lg' | 'xl' | 'xxl'>(['sm', 'md', 'lg', 'xl', 'xxl']),\n  ]),\n  placement: PropTypes.oneOf(['fixed-top', 'fixed-bottom', 'sticky-top']),\n}\n\nCNavbar.displayName = 'CNavbar'\n"],"mappings":";;;;;IAyCaA,OAAO,GAA2DC,UAAU,CAIvF,UACEC,EAUC,EACDC,GAAG;;EAVD,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IACRC,EAAA,GAAAH,EAAA,CAAAI,EAAqB;IAAjBC,SAAS,GAAGF,EAAA,KAAAG,SAAA,QAAK,GAAAH,EAAA;IACrBI,SAAS,GAAAP,EAAA,CAAAO,SAAA;IACTC,KAAK,GAAAR,EAAA,CAAAQ,KAAA;IACLC,WAAW,GAAAT,EAAA,CAAAS,WAAA;IACXC,SAAS,GAAAV,EAAA,CAAAU,SAAA;IACTC,MAAM,GAAAX,EAAA,CAAAW,MAAA;IACNC,SAAS,GAAAZ,EAAA,CAAAY,SAAA;IACNC,IAAI,GAAAC,MAAA,CAAAd,EAAA,EATT,2FAUC,CADQ;EAIT,OACEe,KAAA,CAAAC,aAAA,CAACX,SAAS,EAAAY,QAAA;IACRV,SAAS,EAAEW,UAAU,CACnB,QAAQ,GAAAC,EAAA,OAENA,EAAA,CAAC,KAAM,CAAAC,MAAA,CAAAZ,KAAK,CAAE,IAAGA,KAAK,EACtBW,EAAA,CAAC,OAAOR,MAAM,KAAK,SAAS,GAAG,eAAe,GAAG,iBAAAS,MAAA,CAAiBT,MAAM,CAAE,IAAGA,MAAM,E,KAErFC,SAAS,EACTL,SAAS;EACV,CACG,EAACE,WAAW,IAAI;IAAE,mBAAmB,EAAEA;EAAW,CAAE,EACpDI,IAAI;IACRZ,GAAG,EAAEA;EAAG,IAEPS,SAAS,GACRK,KAAA,CAAAC,aAAA;IAAKT,SAAS,EAAE,OAAOG,SAAS,KAAK,QAAQ,GAAG,YAAa,CAAAU,MAAA,CAAAV,SAAS,CAAE,GAAG;EAAW,GACnFR,QAAQ,CACL,GAENa,KAAG,CAAAC,aAAA,CAAAD,KAAA,CAAAM,QAAA,QAAAnB,QAAQ,CACZ,CACS;AAEhB,CAAC;AAGHJ,OAAO,CAACwB,SAAS,GAAG;EAClBlB,EAAE,EAAEmB,SAAS,CAACC,WAAW;EACzBtB,QAAQ,EAAEqB,SAAS,CAACE,IAAI;EACxBlB,SAAS,EAAEgB,SAAS,CAACG,MAAM;EAC3BlB,KAAK,EAAEmB,aAAa;EACpBlB,WAAW,EAAEc,SAAS,CAACK,KAAK,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;EAC/ClB,SAAS,EAAEa,SAAS,CAACM,SAAS,CAAC,CAC7BN,SAAS,CAACO,IAAI,EACdP,SAAS,CAACK,KAAK,CAA8C,CAC3D,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,OAAO,CACR,CAAC,CACH,CAAC;EACFjB,MAAM,EAAEY,SAAS,CAACM,SAAS,CAAC,CAC1BN,SAAS,CAACO,IAAI,EACdP,SAAS,CAACK,KAAK,CAAoC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CACpF,CAAC;EACFhB,SAAS,EAAEW,SAAS,CAACK,KAAK,CAAC,CAAC,WAAW,EAAE,cAAc,EAAE,YAAY,CAAC;CACvE;AAED9B,OAAO,CAACiC,WAAW,GAAG,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}