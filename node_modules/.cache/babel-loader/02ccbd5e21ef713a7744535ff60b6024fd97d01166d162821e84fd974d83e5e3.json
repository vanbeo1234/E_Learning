{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { createContext, forwardRef, useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { useForkedRef } from '../../hooks/useForkedRef.js';\nimport { usePopper } from '../../hooks/usePopper.js';\nimport { placementPropType } from '../../props.js';\nimport getNextActiveElement from '../../utils/getNextActiveElement.js';\nimport isRTL from '../../utils/isRTL.js';\nimport { getPlacement } from './utils.js';\nvar CDropdownContext = createContext({});\nvar CDropdown = forwardRef(function (_a, ref) {\n  var _b;\n  var children = _a.children,\n    alignment = _a.alignment,\n    _c = _a.as,\n    as = _c === undefined ? 'div' : _c,\n    _d = _a.autoClose,\n    autoClose = _d === undefined ? true : _d,\n    className = _a.className,\n    container = _a.container,\n    dark = _a.dark,\n    direction = _a.direction,\n    _e = _a.offset,\n    offset = _e === undefined ? [0, 2] : _e,\n    onHide = _a.onHide,\n    onShow = _a.onShow,\n    _f = _a.placement,\n    placement = _f === undefined ? 'bottom-start' : _f,\n    _g = _a.popper,\n    popper = _g === undefined ? true : _g,\n    popperConfig = _a.popperConfig,\n    _h = _a.portal,\n    portal = _h === undefined ? false : _h,\n    _j = _a.variant,\n    variant = _j === undefined ? 'btn-group' : _j,\n    _k = _a.visible,\n    visible = _k === undefined ? false : _k,\n    rest = __rest(_a, [\"children\", \"alignment\", \"as\", \"autoClose\", \"className\", \"container\", \"dark\", \"direction\", \"offset\", \"onHide\", \"onShow\", \"placement\", \"popper\", \"popperConfig\", \"portal\", \"variant\", \"visible\"]);\n  var dropdownRef = useRef(null);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var dropdownToggleRef = useRef(null);\n  var dropdownMenuRef = useRef(null);\n  var forkedRef = useForkedRef(ref, dropdownRef);\n  var _l = useState(visible),\n    _visible = _l[0],\n    setVisible = _l[1];\n  var _m = usePopper(),\n    initPopper = _m.initPopper,\n    destroyPopper = _m.destroyPopper;\n  var Component = variant === 'nav-item' ? 'li' : as;\n  // Disable popper if responsive aligment is set.\n  if (typeof alignment === 'object') {\n    popper = false;\n  }\n  var contextValues = {\n    alignment: alignment,\n    container: container,\n    dark: dark,\n    dropdownToggleRef: dropdownToggleRef,\n    dropdownMenuRef: dropdownMenuRef,\n    popper: popper,\n    portal: portal,\n    variant: variant,\n    visible: _visible,\n    setVisible: setVisible\n  };\n  var defaultPopperConfig = {\n    modifiers: [{\n      name: 'offset',\n      options: {\n        offset: offset\n      }\n    }],\n    placement: getPlacement(placement, direction, alignment, isRTL(dropdownMenuRef.current))\n  };\n  var computedPopperConfig = __assign(__assign({}, defaultPopperConfig), typeof popperConfig === 'function' ? popperConfig(defaultPopperConfig) : popperConfig);\n  useEffect(function () {\n    setVisible(visible);\n  }, [visible]);\n  useEffect(function () {\n    if (_visible && dropdownToggleRef.current && dropdownMenuRef.current) {\n      dropdownToggleRef.current.focus();\n      popper && initPopper(dropdownToggleRef.current, dropdownMenuRef.current, computedPopperConfig);\n      window.addEventListener('mouseup', handleMouseUp);\n      window.addEventListener('keyup', handleKeyup);\n      dropdownToggleRef.current.addEventListener('keydown', handleKeydown);\n      dropdownMenuRef.current.addEventListener('keydown', handleKeydown);\n      onShow && onShow();\n    }\n    return function () {\n      popper && destroyPopper();\n      window.removeEventListener('mouseup', handleMouseUp);\n      window.removeEventListener('keyup', handleKeyup);\n      dropdownToggleRef.current && dropdownToggleRef.current.removeEventListener('keydown', handleKeydown);\n      dropdownMenuRef.current && dropdownMenuRef.current.removeEventListener('keydown', handleKeydown);\n      onHide && onHide();\n    };\n  }, [_visible]);\n  var handleKeydown = function (event) {\n    if (_visible && dropdownMenuRef.current && (event.key === 'ArrowDown' || event.key === 'ArrowUp')) {\n      event.preventDefault();\n      var target = event.target;\n      var items = Array.from(dropdownMenuRef.current.querySelectorAll('.dropdown-item:not(.disabled):not(:disabled)'));\n      getNextActiveElement(items, target, event.key === 'ArrowDown', true).focus();\n    }\n  };\n  var handleKeyup = function (event) {\n    if (autoClose === false) {\n      return;\n    }\n    if (event.key === 'Escape') {\n      setVisible(false);\n    }\n  };\n  var handleMouseUp = function (event) {\n    if (!dropdownToggleRef.current || !dropdownMenuRef.current) {\n      return;\n    }\n    if (dropdownToggleRef.current.contains(event.target)) {\n      return;\n    }\n    if (autoClose === true || autoClose === 'inside' && dropdownMenuRef.current.contains(event.target) || autoClose === 'outside' && !dropdownMenuRef.current.contains(event.target)) {\n      setTimeout(function () {\n        return setVisible(false);\n      }, 1);\n      return;\n    }\n  };\n  return React.createElement(CDropdownContext.Provider, {\n    value: contextValues\n  }, variant === 'input-group' ? React.createElement(React.Fragment, null, children) : React.createElement(Component, __assign({\n    className: classNames(variant === 'nav-item' ? 'nav-item dropdown' : variant, (_b = {\n      'dropdown-center': direction === 'center',\n      'dropup dropup-center': direction === 'dropup-center'\n    }, _b[\"\".concat(direction)] = direction && direction !== 'center' && direction !== 'dropup-center', _b), className)\n  }, rest, {\n    ref: forkedRef\n  }), children));\n});\nvar alignmentDirection = PropTypes.oneOf(['start', 'end']);\nCDropdown.propTypes = {\n  alignment: PropTypes.oneOfType([alignmentDirection, PropTypes.shape({\n    xs: alignmentDirection.isRequired\n  }), PropTypes.shape({\n    sm: alignmentDirection.isRequired\n  }), PropTypes.shape({\n    md: alignmentDirection.isRequired\n  }), PropTypes.shape({\n    lg: alignmentDirection.isRequired\n  }), PropTypes.shape({\n    xl: alignmentDirection.isRequired\n  }), PropTypes.shape({\n    xxl: alignmentDirection.isRequired\n  })]),\n  as: PropTypes.elementType,\n  autoClose: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['inside', 'outside'])]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  dark: PropTypes.bool,\n  direction: PropTypes.oneOf(['center', 'dropup', 'dropup-center', 'dropend', 'dropstart']),\n  offset: PropTypes.any,\n  // TODO: find good proptype\n  onHide: PropTypes.func,\n  onShow: PropTypes.func,\n  placement: placementPropType,\n  popper: PropTypes.bool,\n  popperConfig: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  portal: PropTypes.bool,\n  variant: PropTypes.oneOf(['btn-group', 'dropdown', 'input-group', 'nav-item']),\n  visible: PropTypes.bool\n};\nCDropdown.displayName = 'CDropdown';\nexport { CDropdown, CDropdownContext };","map":{"version":3,"names":["CDropdownContext","createContext","CDropdown","forwardRef","_a","ref","children","alignment","_c","as","undefined","_d","autoClose","className","container","dark","direction","_e","offset","onHide","onShow","_f","placement","_g","popper","popperConfig","_h","portal","_j","variant","_k","visible","rest","__rest","dropdownRef","useRef","dropdownToggleRef","dropdownMenuRef","forkedRef","useForkedRef","_l","useState","_visible","setVisible","_m","usePopper","initPopper","destroyPopper","Component","contextValues","defaultPopperConfig","modifiers","name","options","getPlacement","isRTL","current","computedPopperConfig","__assign","useEffect","focus","window","addEventListener","handleMouseUp","handleKeyup","handleKeydown","removeEventListener","event","key","preventDefault","target","items","Array","from","querySelectorAll","getNextActiveElement","contains","setTimeout","React","createElement","Provider","value","Fragment","classNames","_b","concat","alignmentDirection","PropTypes","oneOf","propTypes","oneOfType","shape","xs","isRequired","sm","md","lg","xl","xxl","elementType","bool","node","string","any","func","placementPropType","object","displayName"],"sources":["C:\\Users\\nqminh7\\Downloads\\Hoanthien\\E_Learning\\node_modules\\@coreui\\react\\src\\components\\dropdown\\CDropdown.tsx"],"sourcesContent":["import React, {\n  createContext,\n  ElementType,\n  forwardRef,\n  HTMLAttributes,\n  RefObject,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport type { Options } from '@popperjs/core'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\nimport { useForkedRef, usePopper } from '../../hooks'\nimport { placementPropType } from '../../props'\nimport type { Placements } from '../../types'\nimport { getNextActiveElement, isRTL } from '../../utils'\n\nimport type { Alignments, Directions } from './types'\nimport { getPlacement } from './utils'\n\nexport interface CDropdownProps extends HTMLAttributes<HTMLDivElement | HTMLLIElement> {\n  /**\n   * Specifies the alignment of the React Dropdown Menu within this React Dropdown.\n   *\n   * @example\n   * // Align dropdown menu to the end on large devices, otherwise start\n   * <CDropdown alignment={{ lg: 'end', xs: 'start' }}>\n   *   <CDropdownToggle>Toggle dropdown</CDropdownToggle>\n   *   <CDropdownMenu>\n   *     <CDropdownItem>Action</CDropdownItem>\n   *     <CDropdownItem>Another Action</CDropdownItem>\n   *   </CDropdownMenu>\n   * </CDropdown>\n   *\n   * @type 'start' | 'end' | { xs: 'start' | 'end' } | { sm: 'start' | 'end' } | { md: 'start' | 'end' } | { lg: 'start' | 'end' } | { xl: 'start' | 'end'} | { xxl: 'start' | 'end'}\n   */\n  alignment?: Alignments\n\n  /**\n   * Determines the root node component (native HTML element or a custom React component) for the React Dropdown.\n   */\n  as?: ElementType\n\n  /**\n   * Configures automatic closing behavior for the React Dropdown:\n   * - `true` - Close on clicks inside or outside of the React Dropdown Menu.\n   * - `false` - Disable auto-close; manually call `hide` or `toggle` (also not closed by `Escape`).\n   * - `'inside'` - Close only when clicking inside the React Dropdown Menu.\n   * - `'outside'` - Close only when clicking outside the React Dropdown Menu.\n   *\n   * @example\n   * // Close only when user clicks outside of the menu\n   * <CDropdown autoClose=\"outside\" />\n   */\n  autoClose?: 'inside' | 'outside' | boolean\n\n  /**\n   * Adds custom classes to the React Dropdown root element.\n   */\n  className?: string\n\n  /**\n   * Appends the React Dropdown Menu to a specific element. You can pass an HTML element or a function returning an element. Defaults to `document.body`.\n   *\n   * @example\n   * // Append the menu to a custom container\n   * const myContainer = document.getElementById('my-container')\n   *\n   * <CDropdown container={myContainer} />\n   *\n   * @since 4.11.0\n   */\n  container?: DocumentFragment | Element | (() => DocumentFragment | Element | null) | null\n\n  /**\n   * Applies a darker color scheme to the React Dropdown Menu, often used within dark navbars.\n   */\n  dark?: boolean\n\n  /**\n   * Specifies the direction of the React Dropdown.\n   */\n  direction?: 'center' | 'dropup' | 'dropup-center' | 'dropend' | 'dropstart'\n\n  /**\n   * Defines x and y offsets ([x, y]) for the React Dropdown Menu relative to its target.\n   *\n   * @example\n   * // Offset the menu 10px in X and 5px in Y direction\n   * <CDropdown offset={[10, 5]}>\n   *   ...\n   * </CDropdown>\n   */\n  offset?: [number, number]\n\n  /**\n   * Callback fired right before the React Dropdown becomes hidden.\n   *\n   * @since 4.9.0\n   */\n  onHide?: () => void\n\n  /**\n   * Callback fired immediately after the React Dropdown is displayed.\n   */\n  onShow?: () => void\n\n  /**\n   * Determines the placement of the React Dropdown Menu after Popper.js modifiers.\n   *\n   * @type 'auto' | 'auto-start' | 'auto-end' | 'top-end' | 'top' | 'top-start' | 'bottom-end' | 'bottom' | 'bottom-start' | 'right-start' | 'right' | 'right-end' | 'left-start' | 'left' | 'left-end'\n   */\n  placement?: Placements\n\n  /**\n   * Enables or disables dynamic positioning via Popper.js for the React Dropdown Menu.\n   */\n  popper?: boolean\n\n  /**\n   * Provides a custom Popper.js configuration or a function that returns a modified Popper.js configuration for advanced positioning of the React Dropdown Menu. [Read more](https://popper.js.org/docs/v2/constructors/#options)\n   *\n   * @example\n   * // Providing a custom popper config\n   * <CDropdown\n   *   popperConfig={{\n   *     modifiers: [\n   *       {\n   *         name: 'flip',\n   *         options: { fallbackPlacements: ['bottom', 'top'] },\n   *       },\n   *     ],\n   *   }}\n   * >...</CDropdown>\n   *\n   * @since 5.5.0\n   */\n  popperConfig?: Partial<Options> | ((defaultPopperConfig: Partial<Options>) => Partial<Options>)\n\n  /**\n   * Renders the React Dropdown Menu using a React Portal, allowing it to escape the DOM hierarchy for improved positioning.\n   *\n   * @since 4.8.0\n   */\n  portal?: boolean\n\n  /**\n   * Defines the visual variant of the React Dropdown\n   */\n  variant?: 'btn-group' | 'dropdown' | 'input-group' | 'nav-item'\n\n  /**\n   * Controls the visibility of the React Dropdown Menu:\n   * - `true` - Visible\n   * - `false` - Hidden\n   *\n   * @example\n   * // Programmatically manage the dropdown visibility\n   * const [visible, setVisible] = useState(false)\n   *\n   * <CDropdown visible={visible}>\n   *   ...\n   * </CDropdown>\n   *\n   */\n  visible?: boolean\n}\n\ninterface ContextProps extends CDropdownProps {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  dropdownToggleRef: RefObject<any | undefined>\n  dropdownMenuRef: RefObject<HTMLDivElement | HTMLUListElement | undefined>\n  setVisible: React.Dispatch<React.SetStateAction<boolean | undefined>>\n  portal: boolean\n}\n\nexport const CDropdownContext = createContext({} as ContextProps)\n\nexport const CDropdown: PolymorphicRefForwardingComponent<'div', CDropdownProps> = forwardRef<\n  HTMLDivElement | HTMLLIElement,\n  CDropdownProps\n>(\n  (\n    {\n      children,\n      alignment,\n      as = 'div',\n      autoClose = true,\n      className,\n      container,\n      dark,\n      direction,\n      offset = [0, 2],\n      onHide,\n      onShow,\n      placement = 'bottom-start',\n      popper = true,\n      popperConfig,\n      portal = false,\n      variant = 'btn-group',\n      visible = false,\n      ...rest\n    },\n    ref\n  ) => {\n    const dropdownRef = useRef<HTMLDivElement>(null)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const dropdownToggleRef = useRef<any>(null)\n    const dropdownMenuRef = useRef<HTMLDivElement | HTMLUListElement>(null)\n    const forkedRef = useForkedRef(ref, dropdownRef)\n    const [_visible, setVisible] = useState(visible)\n    const { initPopper, destroyPopper } = usePopper()\n\n    const Component = variant === 'nav-item' ? 'li' : as\n\n    // Disable popper if responsive aligment is set.\n    if (typeof alignment === 'object') {\n      popper = false\n    }\n\n    const contextValues = {\n      alignment,\n      container,\n      dark,\n      dropdownToggleRef,\n      dropdownMenuRef,\n      popper,\n      portal,\n      variant,\n      visible: _visible,\n      setVisible,\n    }\n\n    const defaultPopperConfig = {\n      modifiers: [\n        {\n          name: 'offset',\n          options: {\n            offset: offset,\n          },\n        },\n      ],\n      placement: getPlacement(placement, direction, alignment, isRTL(dropdownMenuRef.current)),\n    }\n\n    const computedPopperConfig: Partial<Options> = {\n      ...defaultPopperConfig,\n      ...(typeof popperConfig === 'function' ? popperConfig(defaultPopperConfig) : popperConfig),\n    }\n\n    useEffect(() => {\n      setVisible(visible)\n    }, [visible])\n\n    useEffect(() => {\n      if (_visible && dropdownToggleRef.current && dropdownMenuRef.current) {\n        dropdownToggleRef.current.focus()\n        popper &&\n          initPopper(dropdownToggleRef.current, dropdownMenuRef.current, computedPopperConfig)\n        window.addEventListener('mouseup', handleMouseUp)\n        window.addEventListener('keyup', handleKeyup)\n        dropdownToggleRef.current.addEventListener('keydown', handleKeydown)\n        dropdownMenuRef.current.addEventListener('keydown', handleKeydown)\n        onShow && onShow()\n      }\n\n      return () => {\n        popper && destroyPopper()\n        window.removeEventListener('mouseup', handleMouseUp)\n        window.removeEventListener('keyup', handleKeyup)\n        dropdownToggleRef.current &&\n          dropdownToggleRef.current.removeEventListener('keydown', handleKeydown)\n        dropdownMenuRef.current &&\n          dropdownMenuRef.current.removeEventListener('keydown', handleKeydown)\n        onHide && onHide()\n      }\n    }, [_visible])\n\n    const handleKeydown = (event: KeyboardEvent) => {\n      if (\n        _visible &&\n        dropdownMenuRef.current &&\n        (event.key === 'ArrowDown' || event.key === 'ArrowUp')\n      ) {\n        event.preventDefault()\n        const target = event.target as HTMLElement\n        const items: HTMLElement[] = Array.from(\n          dropdownMenuRef.current.querySelectorAll('.dropdown-item:not(.disabled):not(:disabled)')\n        )\n        getNextActiveElement(items, target, event.key === 'ArrowDown', true).focus()\n      }\n    }\n\n    const handleKeyup = (event: KeyboardEvent) => {\n      if (autoClose === false) {\n        return\n      }\n\n      if (event.key === 'Escape') {\n        setVisible(false)\n      }\n    }\n\n    const handleMouseUp = (event: Event) => {\n      if (!dropdownToggleRef.current || !dropdownMenuRef.current) {\n        return\n      }\n\n      if (dropdownToggleRef.current.contains(event.target as HTMLElement)) {\n        return\n      }\n\n      if (\n        autoClose === true ||\n        (autoClose === 'inside' && dropdownMenuRef.current.contains(event.target as HTMLElement)) ||\n        (autoClose === 'outside' && !dropdownMenuRef.current.contains(event.target as HTMLElement))\n      ) {\n        setTimeout(() => setVisible(false), 1)\n        return\n      }\n    }\n\n    return (\n      <CDropdownContext.Provider value={contextValues}>\n        {variant === 'input-group' ? (\n          <>{children}</>\n        ) : (\n          <Component\n            className={classNames(\n              variant === 'nav-item' ? 'nav-item dropdown' : variant,\n              {\n                'dropdown-center': direction === 'center',\n                'dropup dropup-center': direction === 'dropup-center',\n                [`${direction}`]:\n                  direction && direction !== 'center' && direction !== 'dropup-center',\n              },\n              className\n            )}\n            {...rest}\n            ref={forkedRef}\n          >\n            {children}\n          </Component>\n        )}\n      </CDropdownContext.Provider>\n    )\n  }\n)\n\nconst alignmentDirection = PropTypes.oneOf<Directions>(['start', 'end'])\n\nCDropdown.propTypes = {\n  alignment: PropTypes.oneOfType([\n    alignmentDirection,\n    PropTypes.shape({ xs: alignmentDirection.isRequired }),\n    PropTypes.shape({ sm: alignmentDirection.isRequired }),\n    PropTypes.shape({ md: alignmentDirection.isRequired }),\n    PropTypes.shape({ lg: alignmentDirection.isRequired }),\n    PropTypes.shape({ xl: alignmentDirection.isRequired }),\n    PropTypes.shape({ xxl: alignmentDirection.isRequired }),\n  ]),\n  as: PropTypes.elementType,\n  autoClose: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf<'inside' | 'outside'>(['inside', 'outside']),\n  ]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  dark: PropTypes.bool,\n  direction: PropTypes.oneOf(['center', 'dropup', 'dropup-center', 'dropend', 'dropstart']),\n  offset: PropTypes.any, // TODO: find good proptype\n  onHide: PropTypes.func,\n  onShow: PropTypes.func,\n  placement: placementPropType,\n  popper: PropTypes.bool,\n  popperConfig: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  portal: PropTypes.bool,\n  variant: PropTypes.oneOf(['btn-group', 'dropdown', 'input-group', 'nav-item']),\n  visible: PropTypes.bool,\n}\n\nCDropdown.displayName = 'CDropdown'\n"],"mappings":";;;;;;;;;;IAmLaA,gBAAgB,GAAGC,aAAa,CAAC,EAAkB;IAEnDC,SAAS,GAA6DC,UAAU,CAI3F,UACEC,EAmBC,EACDC,GAAG;;EAnBD,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IACRC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IACTC,EAAA,GAAAJ,EAAA,CAAAK,EAAU;IAAVA,EAAE,GAAAD,EAAA,KAAAE,SAAA,GAAG,KAAK,GAAAF,EAAA;IACVG,EAAgB,GAAAP,EAAA,CAAAQ,SAAA;IAAhBA,SAAS,GAAGD,EAAA,KAAAD,SAAA,OAAI,GAAAC,EAAA;IAChBE,SAAS,GAAAT,EAAA,CAAAS,SAAA;IACTC,SAAS,GAAAV,EAAA,CAAAU,SAAA;IACTC,IAAI,GAAAX,EAAA,CAAAW,IAAA;IACJC,SAAS,GAAAZ,EAAA,CAAAY,SAAA;IACTC,EAAA,GAAAb,EAAA,CAAAc,MAAe;IAAfA,MAAM,GAAAD,EAAA,KAAAP,SAAA,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAAO,EAAA;IACfE,MAAM,GAAAf,EAAA,CAAAe,MAAA;IACNC,MAAM,GAAAhB,EAAA,CAAAgB,MAAA;IACNC,EAAA,GAAAjB,EAAA,CAAAkB,SAA0B;IAA1BA,SAAS,GAAAD,EAAA,KAAAX,SAAA,GAAG,cAAc,GAAAW,EAAA;IAC1BE,EAAA,GAAAnB,EAAA,CAAAoB,MAAa;IAAbA,MAAM,GAAAD,EAAA,KAAAb,SAAA,GAAG,IAAI,GAAAa,EAAA;IACbE,YAAY,GAAArB,EAAA,CAAAqB,YAAA;IACZC,EAAc,GAAAtB,EAAA,CAAAuB,MAAA;IAAdA,MAAM,GAAGD,EAAA,KAAAhB,SAAA,QAAK,GAAAgB,EAAA;IACdE,EAAA,GAAAxB,EAAA,CAAAyB,OAAqB;IAArBA,OAAO,GAAAD,EAAA,KAAAlB,SAAA,GAAG,WAAW,GAAAkB,EAAA;IACrBE,EAAA,GAAA1B,EAAA,CAAA2B,OAAe;IAAfA,OAAO,GAAAD,EAAA,KAAApB,SAAA,GAAG,KAAK,GAAAoB,EAAA;IACZE,IAAI,GAAAC,MAAA,CAAA7B,EAAA,EAlBT,gMAmBC,CADQ;EAIT,IAAM8B,WAAW,GAAGC,MAAM,CAAiB,IAAI,CAAC;;EAEhD,IAAMC,iBAAiB,GAAGD,MAAM,CAAM,IAAI,CAAC;EAC3C,IAAME,eAAe,GAAGF,MAAM,CAAoC,IAAI,CAAC;EACvE,IAAMG,SAAS,GAAGC,YAAY,CAAClC,GAAG,EAAE6B,WAAW,CAAC;EAC1C,IAAAM,EAAA,GAAyBC,QAAQ,CAACV,OAAO,CAAC;IAAzCW,QAAQ,GAAAF,EAAA;IAAEG,UAAU,GAAAH,EAAA,GAAqB;EAC1C,IAAAI,EAAA,GAAgCC,SAAS,EAAE;IAAzCC,UAAU,GAAAF,EAAA,CAAAE,UAAA;IAAEC,aAAa,GAAAH,EAAA,CAAAG,aAAgB;EAEjD,IAAMC,SAAS,GAAGnB,OAAO,KAAK,UAAU,GAAG,IAAI,GAAGpB,EAAE;;EAGpD,IAAI,OAAOF,SAAS,KAAK,QAAQ,EAAE;IACjCiB,MAAM,GAAG,KAAK;;EAGhB,IAAMyB,aAAa,GAAG;IACpB1C,SAAS,EAAAA,SAAA;IACTO,SAAS,EAAAA,SAAA;IACTC,IAAI,EAAAA,IAAA;IACJqB,iBAAiB,EAAAA,iBAAA;IACjBC,eAAe,EAAAA,eAAA;IACfb,MAAM,EAAAA,MAAA;IACNG,MAAM,EAAAA,MAAA;IACNE,OAAO,EAAAA,OAAA;IACPE,OAAO,EAAEW,QAAQ;IACjBC,UAAU,EAAAA;GACX;EAED,IAAMO,mBAAmB,GAAG;IAC1BC,SAAS,EAAE,CACT;MACEC,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;QACPnC,MAAM,EAAEA;MACT;IACF,EACF;IACDI,SAAS,EAAEgC,YAAY,CAAChC,SAAS,EAAEN,SAAS,EAAET,SAAS,EAAEgD,KAAK,CAAClB,eAAe,CAACmB,OAAO,CAAC;GACxF;EAED,IAAMC,oBAAoB,GAAAC,QAAA,CAAAA,QAAA,KACrBR,mBAAmB,GAClB,OAAOzB,YAAY,KAAK,UAAU,GAAGA,YAAY,CAACyB,mBAAmB,CAAC,GAAGzB,YAAY,CAC1F;EAEDkC,SAAS,CAAC;IACRhB,UAAU,CAACZ,OAAO,CAAC;EACrB,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb4B,SAAS,CAAC;IACR,IAAIjB,QAAQ,IAAIN,iBAAiB,CAACoB,OAAO,IAAInB,eAAe,CAACmB,OAAO,EAAE;MACpEpB,iBAAiB,CAACoB,OAAO,CAACI,KAAK,EAAE;MACjCpC,MAAM,IACJsB,UAAU,CAACV,iBAAiB,CAACoB,OAAO,EAAEnB,eAAe,CAACmB,OAAO,EAAEC,oBAAoB,CAAC;MACtFI,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEC,aAAa,CAAC;MACjDF,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEE,WAAW,CAAC;MAC7C5B,iBAAiB,CAACoB,OAAO,CAACM,gBAAgB,CAAC,SAAS,EAAEG,aAAa,CAAC;MACpE5B,eAAe,CAACmB,OAAO,CAACM,gBAAgB,CAAC,SAAS,EAAEG,aAAa,CAAC;MAClE7C,MAAM,IAAIA,MAAM,EAAE;;IAGpB,OAAO;MACLI,MAAM,IAAIuB,aAAa,EAAE;MACzBc,MAAM,CAACK,mBAAmB,CAAC,SAAS,EAAEH,aAAa,CAAC;MACpDF,MAAM,CAACK,mBAAmB,CAAC,OAAO,EAAEF,WAAW,CAAC;MAChD5B,iBAAiB,CAACoB,OAAO,IACvBpB,iBAAiB,CAACoB,OAAO,CAACU,mBAAmB,CAAC,SAAS,EAAED,aAAa,CAAC;MACzE5B,eAAe,CAACmB,OAAO,IACrBnB,eAAe,CAACmB,OAAO,CAACU,mBAAmB,CAAC,SAAS,EAAED,aAAa,CAAC;MACvE9C,MAAM,IAAIA,MAAM,EAAE;IACpB,CAAC;EACH,CAAC,EAAE,CAACuB,QAAQ,CAAC,CAAC;EAEd,IAAMuB,aAAa,GAAG,SAAAA,CAACE,KAAoB;IACzC,IACEzB,QAAQ,IACRL,eAAe,CAACmB,OAAO,KACtBW,KAAK,CAACC,GAAG,KAAK,WAAW,IAAID,KAAK,CAACC,GAAG,KAAK,SAAS,CAAC,EACtD;MACAD,KAAK,CAACE,cAAc,EAAE;MACtB,IAAMC,MAAM,GAAGH,KAAK,CAACG,MAAqB;MAC1C,IAAMC,KAAK,GAAkBC,KAAK,CAACC,IAAI,CACrCpC,eAAe,CAACmB,OAAO,CAACkB,gBAAgB,CAAC,8CAA8C,CAAC,CACzF;MACDC,oBAAoB,CAACJ,KAAK,EAAED,MAAM,EAAEH,KAAK,CAACC,GAAG,KAAK,WAAW,EAAE,IAAI,CAAC,CAACR,KAAK,EAAE;;EAEhF,CAAC;EAED,IAAMI,WAAW,GAAG,SAAAA,CAACG,KAAoB;IACvC,IAAIvD,SAAS,KAAK,KAAK,EAAE;MACvB;;IAGF,IAAIuD,KAAK,CAACC,GAAG,KAAK,QAAQ,EAAE;MAC1BzB,UAAU,CAAC,KAAK,CAAC;;EAErB,CAAC;EAED,IAAMoB,aAAa,GAAG,SAAAA,CAACI,KAAY;IACjC,IAAI,CAAC/B,iBAAiB,CAACoB,OAAO,IAAI,CAACnB,eAAe,CAACmB,OAAO,EAAE;MAC1D;;IAGF,IAAIpB,iBAAiB,CAACoB,OAAO,CAACoB,QAAQ,CAACT,KAAK,CAACG,MAAqB,CAAC,EAAE;MACnE;;IAGF,IACE1D,SAAS,KAAK,IAAI,IACjBA,SAAS,KAAK,QAAQ,IAAIyB,eAAe,CAACmB,OAAO,CAACoB,QAAQ,CAACT,KAAK,CAACG,MAAqB,CAAE,IACxF1D,SAAS,KAAK,SAAS,IAAI,CAACyB,eAAe,CAACmB,OAAO,CAACoB,QAAQ,CAACT,KAAK,CAACG,MAAqB,CAAE,EAC3F;MACAO,UAAU,CAAC;QAAM,OAAAlC,UAAU,CAAC,KAAK,CAAC;MAAA,GAAE,CAAC,CAAC;MACtC;;EAEJ,CAAC;EAED,OACEmC,KAAC,CAAAC,aAAA,CAAA/E,gBAAgB,CAACgF,QAAQ;IAACC,KAAK,EAAEhC;EAAa,GAC5CpB,OAAO,KAAK,aAAa,GACxBiD,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAI,QAAA,QAAG5E,QAAQ,CAAI,GAEfwE,KAAA,CAAAC,aAAA,CAAC/B,SAAS,EACRU,QAAA;IAAA7C,SAAS,EAAEsE,UAAU,CACnBtD,OAAO,KAAK,UAAU,GAAG,mBAAmB,GAAGA,OAAO,GAAAuD,EAAA;MAEpD,iBAAiB,EAAEpE,SAAS,KAAK,QAAQ;MACzC,sBAAsB,EAAEA,SAAS,KAAK;OACtCoE,EAAA,CAAC,EAAG,CAAAC,MAAA,CAAArE,SAAS,CAAE,IACbA,SAAS,IAAIA,SAAS,KAAK,QAAQ,IAAIA,SAAS,KAAK,eAAe,EAExEoE,EAAA,GAAAvE,SAAS;EACV,GACGmB,IAAI;IACR3B,GAAG,EAAEiC;EAAS,IAEbhC,QAAQ,CAEZ,CACyB;AAEhC,CAAC;AAGH,IAAMgF,kBAAkB,GAAGC,SAAS,CAACC,KAAK,CAAa,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAExEtF,SAAS,CAACuF,SAAS,GAAG;EACpBlF,SAAS,EAAEgF,SAAS,CAACG,SAAS,CAAC,CAC7BJ,kBAAkB,EAClBC,SAAS,CAACI,KAAK,CAAC;IAAEC,EAAE,EAAEN,kBAAkB,CAACO;EAAU,CAAE,CAAC,EACtDN,SAAS,CAACI,KAAK,CAAC;IAAEG,EAAE,EAAER,kBAAkB,CAACO;EAAU,CAAE,CAAC,EACtDN,SAAS,CAACI,KAAK,CAAC;IAAEI,EAAE,EAAET,kBAAkB,CAACO;EAAU,CAAE,CAAC,EACtDN,SAAS,CAACI,KAAK,CAAC;IAAEK,EAAE,EAAEV,kBAAkB,CAACO;EAAU,CAAE,CAAC,EACtDN,SAAS,CAACI,KAAK,CAAC;IAAEM,EAAE,EAAEX,kBAAkB,CAACO;EAAU,CAAE,CAAC,EACtDN,SAAS,CAACI,KAAK,CAAC;IAAEO,GAAG,EAAEZ,kBAAkB,CAACO;EAAU,CAAE,CAAC,CACxD,CAAC;EACFpF,EAAE,EAAE8E,SAAS,CAACY,WAAW;EACzBvF,SAAS,EAAE2E,SAAS,CAACG,SAAS,CAAC,CAC7BH,SAAS,CAACa,IAAI,EACdb,SAAS,CAACC,KAAK,CAAuB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAC7D,CAAC;EACFlF,QAAQ,EAAEiF,SAAS,CAACc,IAAI;EACxBxF,SAAS,EAAE0E,SAAS,CAACe,MAAM;EAC3BvF,IAAI,EAAEwE,SAAS,CAACa,IAAI;EACpBpF,SAAS,EAAEuE,SAAS,CAACC,KAAK,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,eAAe,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;EACzFtE,MAAM,EAAEqE,SAAS,CAACgB,GAAG;EAAA;EACrBpF,MAAM,EAAEoE,SAAS,CAACiB,IAAI;EACtBpF,MAAM,EAAEmE,SAAS,CAACiB,IAAI;EACtBlF,SAAS,EAAEmF,iBAAiB;EAC5BjF,MAAM,EAAE+D,SAAS,CAACa,IAAI;EACtB3E,YAAY,EAAE8D,SAAS,CAACG,SAAS,CAAC,CAACH,SAAS,CAACiB,IAAI,EAAEjB,SAAS,CAACmB,MAAM,CAAC,CAAC;EACrE/E,MAAM,EAAE4D,SAAS,CAACa,IAAI;EACtBvE,OAAO,EAAE0D,SAAS,CAACC,KAAK,CAAC,CAAC,WAAW,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;EAC9EzD,OAAO,EAAEwD,SAAS,CAACa;CACpB;AAEDlG,SAAS,CAACyG,WAAW,GAAG,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}