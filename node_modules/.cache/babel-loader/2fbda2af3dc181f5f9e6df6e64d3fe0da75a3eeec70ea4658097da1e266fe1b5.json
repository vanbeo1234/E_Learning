{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nqminh7\\\\Downloads\\\\Hoanthien\\\\E_Learning\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [courses, setCourses] = useState([{\n    id: 1,\n    courseName: 'Java Core',\n    instructor: 'Nguyễn Văn A',\n    lessons: 20,\n    description: 'Cung cấp kiến thức cơ bản về OOP, design pattern',\n    startDate: '2023-01-01',\n    endDate: '2023-03-31',\n    status: 'Hoạt động',\n    objectives: [],\n    lectures: [],\n    coverImage: null,\n    students: []\n  }, {\n    id: 2,\n    courseName: 'ReactJS',\n    instructor: 'Trần Thị B',\n    lessons: 15,\n    description: 'Học cách xây dựng ứng dụng với ReactJS',\n    startDate: '2023-02-01',\n    endDate: '2023-04-30',\n    status: 'Không hoạt động',\n    objectives: [],\n    lectures: [],\n    coverImage: null,\n    students: []\n  }]);\n  const [users, setUsers] = useState([{\n    id: 1,\n    userCode: 'user001',\n    name: 'Nguyễn Văn A',\n    email: 'nguyenvana@example.com',\n    role: 'Instructor',\n    status: 'Active'\n  }, {\n    id: 2,\n    userCode: 'user002',\n    name: 'Trần Thị B',\n    email: 'tranb@example.com',\n    role: 'Student',\n    status: 'Disabled'\n  }]);\n  const addCourse = newCourse => {\n    setCourses(prevCourses => [...prevCourses, newCourse]);\n  };\n  const updateCourse = updatedCourse => {\n    setCourses(prevCourses => prevCourses.map(course => course.id === updatedCourse.id ? updatedCourse : course));\n  };\n  const addUser = newUser => {\n    setUsers(prevUsers => [...prevUsers, newUser]);\n  };\n  const updateUser = updatedUser => {\n    setUsers(prevUsers => prevUsers.map(user => user.id === updatedUser.id ? updatedUser : user));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebara, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          title: \"Qu\\u1EA3n tr\\u1ECB h\\u1EC7 th\\u1ED1ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/user-management\",\n            element: /*#__PURE__*/_jsxDEV(UserManagement, {\n              users: users,\n              updateUser: updateUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/course-management\",\n            element: /*#__PURE__*/_jsxDEV(CourseManagement, {\n              courses: courses,\n              updateCourse: updateCourse\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/add-course\",\n            element: /*#__PURE__*/_jsxDEV(AddCourse, {\n              addCourse: addCourse\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/edit-course/:id\",\n            element: /*#__PURE__*/_jsxDEV(EditCourse, {\n              updateCourse: updateCourse\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/course-management\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9n3ZdFqGliWNeYARxoJP/H7E4NY=\");\n_c = App;\nexport default App;\n\n/**          function App() {\r\n  const [courses, setCourses] = useState([\r\n    {\r\n      id: 1,\r\n      courseName: 'Java Core',\r\n      instructor: 'Nguyễn Văn A',\r\n      lessons: 20,\r\n      description: 'Cung cấp kiến thức cơ bản về OOP, design pattern',\r\n      startDate: '2023-01-01',\r\n      endDate: '2023-03-31',\r\n      status: 'Hoạt động',\r\n      objectives: [],\r\n      lectures: [],\r\n      coverImage: null,\r\n      students: []\r\n    },\r\n    {\r\n      id: 2,\r\n      courseName: 'ReactJS',\r\n      instructor: 'Trần Thị B',\r\n      lessons: 15,\r\n      description: 'Học cách xây dựng ứng dụng với ReactJS',\r\n      startDate: '2023-02-01',\r\n      endDate: '2023-04-30',\r\n      status: 'Không hoạt động',\r\n      objectives: [],\r\n      lectures: [],\r\n      coverImage: null,\r\n      students: []\r\n    }\r\n  ]);\r\n\r\n  const [users, setUsers] = useState([\r\n    {\r\n      id: 1,\r\n      userCode: 'user001',\r\n      name: 'Nguyễn Văn A',\r\n      email: 'nguyenvana@example.com',\r\n      role: 'Instructor',\r\n      status: 'Active'\r\n    },\r\n    {\r\n      id: 2,\r\n      userCode: 'user002',\r\n      name: 'Trần Thị B',\r\n      email: 'tranb@example.com',\r\n      role: 'Student',\r\n      status: 'Disabled'\r\n    }\r\n  ]);\r\n\r\n  const addCourse = (newCourse) => {\r\n    setCourses((prevCourses) => [...prevCourses, newCourse]);\r\n  };\r\n\r\n  const updateCourse = (updatedCourse) => {\r\n    setCourses((prevCourses) =>\r\n      prevCourses.map((course) =>\r\n        course.id === updatedCourse.id ? updatedCourse : course\r\n      )\r\n    );\r\n  };\r\n\r\n  const addUser = (newUser) => {\r\n    setUsers((prevUsers) => [...prevUsers, newUser]);\r\n  };\r\n\r\n  const updateUser = (updatedUser) => {\r\n    setUsers((prevUsers) =>\r\n      prevUsers.map((user) =>\r\n        user.id === updatedUser.id ? updatedUser : user\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <Sidebara />\r\n\r\n        <div className=\"main-content\">\r\n          <Header title=\"Quản trị hệ thống\" />\r\n\r\n          <Routes>\r\n            <Route path=\"/user-management\" element={<UserManagement users={users} updateUser={updateUser} />} />\r\n            <Route path=\"/course-management\" element={<CourseManagement courses={courses} updateCourse={updateCourse} />} />\r\n            <Route path=\"/add-course\" element={<AddCourse addCourse={addCourse} />} />\r\n            <Route path=\"/edit-course/:id\" element={<EditCourse updateCourse={updateCourse} />} />\r\n            \r\n            <Route path=\"/\" element={<Navigate to=\"/course-management\" />} />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n*/\n\n/**         function AppContent() {\r\n  const [courses, setCourses] = useState([]);\r\n  const location = useLocation();  // Sử dụng useLocation để lấy đường dẫn hiện tại\r\n  const showFooterPaths = [\"/home\", \"/my-course\", \"/progress\", \"/article\"];\r\n  const shouldShowFooter = showFooterPaths.includes(location.pathname); // Kiểm tra xem footer có hiển thị không\r\n\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <div className=\"container\">\r\n        <Sidebar />\r\n        <div className=\"content\">\r\n          <Routes>\r\n            <Route path=\"/home\" element={<><Header title=\"Trang chủ\" isSearch={true} /><Home /></>} />\r\n            <Route path=\"/my-course\" element={<><Header title=\"Khóa học của tôi\" /><MyCourse /></>} />\r\n            <Route path=\"/progress\" element={<><Header title=\"Tiến độ học tập\" /><LearningProgress /></>} />\r\n            <Route path=\"/article\" element={<><Header title=\"Bài viết\" /><Article /></>} />\r\n            <Route path=\"/course/:courseId\" element={<><Header title=\"Thông tin khóa học\" /><CourseReactJS courses={courses} /></>} />\r\n            <Route path=\"/learn1\" element={<><Header title=\"Học ReactJS\" /><Learn1 /></>} />\r\n            <Route path=\"*\" element={<Navigate to=\"/home\" />} />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n      {shouldShowFooter && <Footer />}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <AppContent />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App; \r\n   */\n\n/**        <div className=\"container\">\r\n  <Sidebara />\r\n  <Routes>\r\n              <Route path=\"/user-management\" element={<><Headera title=\"Quản lý người dùng\" /><UserManagement /></>} />\r\n              <Route path=\"/course-management\" element={<><Headera title=\"Quản lý khóa học\" /><CourseManagement courses={courses} /></>} />\r\n              <Route path=\"/add-course\" element={<><Headera title=\"Thêm khóa học\" /><AddCourseModal /></>} />\r\n              <Route path=\"/\" element={<Navigate to=\"/admin/course-management\" />} />\r\n            </Routes>\r\n  </div> */\n\n/*giangvien\r\n                <div className=\"app-wrapper\">\r\n    <Sidebars />\r\n    <div className=\"content\">\r\n      <Routes>\r\n        <Route\r\n          path=\"/homeg\"\r\n          element={<><Headers title=\"Trang chủ giảng viên\" /><Homeg /></>}\r\n        />\r\n        <Route\r\n          path=\"/courses\"\r\n          element={<><Headers title=\"Danh sách khóa học\" /><CourseTable /></>}\r\n        />\r\n        <Route\r\n          path=\"/create-course\"\r\n          element={<><Headers title=\"Tạo khóa học mới\" /><CourseForm isEdit={false} /></>}\r\n        />\r\n        <Route\r\n          path=\"/edit-course/:id\"\r\n          element={<><Headers title=\"Chỉnh sửa khóa học\" /><Feature isEdit={true} /></>}\r\n        />\r\n        <Route\r\n          path=\"/course-info/:id\"\r\n          element={<><Headers title=\"Thông tin khóa học\" /><CourseInfo /></>}\r\n        />\r\n        <Route\r\n          path=\"/feedback\"\r\n          element={<><Headers title=\"Phản hồi từ học viên\" /><FeedbackList /></>}\r\n        />\r\n        <Route path=\"*\" element={<Navigate to=\"/homeg\" />} />\r\n      </Routes>\r\n    </div>\r\n  </div>*/\n\n/*import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Navigate, useLocation } from 'react-router-dom';\r\nimport './App.css';\r\nimport Login from './components/Page/Login';\r\nimport Signup from './components/Page/Signup';\r\nimport Welcome from'./components/Page/Welcome';\r\n// Student Components\r\nimport Sidebar from './components/Student/Layout/Sidebar';\r\nimport Header from './components/Student/Layout/Header';\r\nimport Footer from './components/Student/Layout/Footer';\r\nimport Home from './components/Student/Routes/Home';\r\nimport MyCourse from './components/Student/Routes/MyCourse';\r\nimport LearningProgress from './components/Student/Routes/LearningProgress';\r\nimport Article from './components/Student/Routes/Article';\r\nimport CourseReactJS from './components/Student/Routes/Course Information/CourseReactJS';\r\nimport Learn1 from './components/Student/Routes/Course Information/Study Course/Learn1';\r\n// Lecturer Components\r\nimport Sidebars from './components/Lecturer/Layouts/Sidebar';\r\nimport Homes from './components/Lecturer/Routes/Homes';\r\nimport CourseForm from './components/Lecturer/Routes/CourseForm';\r\nimport CourseInfo from './components/Lecturer/Routes/CourseInfo';\r\nimport CourseTable from './components/Lecturer/Routes/CourseTable';\r\nimport CourseList from './components/Lecturer/Routes/CourseList';\r\nimport FeedbackList from './components/Lecturer/Routes/FeedbackList';\r\nimport Feature from './components/Lecturer/Routes/Feature';\r\n// Admin Components\r\nimport Headera from './components/Admin/Layout/Headera';\r\nimport Sidebara from './components/Admin/Layout/Sidebara';\r\nimport UserManagement from './components/Admin/User/UserManagement';\r\nimport AddUserModal from './components/Admin/User/Function/Add';\r\nimport ConfirmModal from './components/Admin/Course/Function/Confirm';\r\nimport EditUserModal from './components/Admin/User/Function/Edit';\r\nimport UserSearchForm from './components/Admin/User/Function/Search';\r\nimport CourseManagement from './components/Admin/Course/CourseManagement';\r\nimport AddCourse from './components/Admin/Course/Function/AddCourse';\r\nimport ConfirmModalCousre from './components/Admin/Course/Function/Confirm';\r\nimport EditCourse from './components/Admin/Course/Function/EditCourse';\r\nimport SearchCourses from './components/Admin/Course/Function/Search';\r\nimport Modala from './components/Admin/Course/Function/Modala';\r\nfunction AppContent() {\r\nconst [courses, setCourses] = useState([]);\r\nconst location = useLocation();\r\nconst showFooterPaths = [\"/home\", \"/my-course\", \"/progress\", \"/article\"];\r\nconst shouldShowFooter = showFooterPaths.includes(location.pathname);\r\n  // Check if the current path is either login or signup\r\nconst isAuthPage = location.pathname === \"/login\" || location.pathname === \"/signup\";\r\n  return (\r\n  <div className=\"app-wrapper\">\r\n    <div className=\"container\">\r\n      {!isAuthPage && (\r\n        location.pathname.includes(\"/admin\") ? (\r\n          <>\r\n            <Sidebara />\r\n            <Headera title=\"Admin Panel\" />\r\n          </>\r\n        ) : location.pathname.includes(\"/lecturer\") ? (\r\n          <>\r\n            <Sidebars />\r\n            <Headera title=\"Lecturer Panel\" />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Sidebar />\r\n            <Header title=\"Student Panel\" />\r\n          </>\r\n        )\r\n      )}\r\n        <div className=\"content\">\r\n        <Routes>\r\n          <Route path=\"/home\" element={<Home />} />\r\n          <Route path=\"/my-course\" element={<MyCourse />} />\r\n          <Route path=\"/progress\" element={<LearningProgress />} />\r\n          <Route path=\"/article\" element={<Article />} />\r\n          <Route path=\"/course/:courseId\" element={<CourseReactJS courses={courses} />} />\r\n          <Route path=\"/learn1\" element={<Learn1 />} />\r\n            <Route path=\"/lecturer/home\" element={<Homes />} />\r\n          <Route path=\"/lecturer/course-form\" element={<CourseForm />} />\r\n          <Route path=\"/lecturer/course-info\" element={<CourseInfo />} />\r\n          <Route path=\"/lecturer/course-table\" element={<CourseTable />} />\r\n          <Route path=\"/lecturer/course-list\" element={<CourseList />} />\r\n          <Route path=\"/lecturer/feedback-list\" element={<FeedbackList />} />\r\n          <Route path=\"/lecturer/feature\" element={<Feature />} />\r\n            <Route path=\"/admin/user-management\" element={<UserManagement />} />\r\n          <Route path=\"/admin/add-user\" element={<AddUserModal />} />\r\n          <Route path=\"/admin/edit-user/:id\" element={<EditUserModal />} />\r\n          <Route path=\"/admin/course-management\" element={<CourseManagement courses={courses} />} />\r\n          <Route path=\"/admin/add-course\" element={<AddCourse />} />\r\n          <Route path=\"/admin/edit-course/:id\" element={<EditCourse />} />\r\n          <Route path=\"/admin/search-courses\" element={<SearchCourses />} />\r\n          <Route path=\"/admin/confirm\" element={<ConfirmModal />} />\r\n            <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/signup\" element={<Signup />} />\r\n            <Route path=\"*\" element={<Navigate to=\"/home\" />} />\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n    {shouldShowFooter && <Footer />}\r\n  </div>\r\n);\r\n}\r\nfunction App() {\r\nreturn (\r\n  <Router>\r\n    <AppContent />\r\n  </Router>\r\n);\r\n}\r\n// Make sure you're exporting the App component by default\r\nexport default App;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_s","courses","setCourses","useState","id","courseName","instructor","lessons","description","startDate","endDate","status","objectives","lectures","coverImage","students","users","setUsers","userCode","name","email","role","addCourse","newCourse","prevCourses","updateCourse","updatedCourse","map","course","addUser","newUser","prevUsers","updateUser","updatedUser","user","_jsxDEV","Router","children","className","Sidebara","fileName","_jsxFileName","lineNumber","columnNumber","Header","title","Routes","Route","path","element","UserManagement","CourseManagement","AddCourse","EditCourse","Navigate","to","_c","$RefreshReg$"],"sources":["C:/Users/nqminh7/Downloads/Hoanthien/E_Learning/src/App.js"],"sourcesContent":["function App() {\r\n  const [courses, setCourses] = useState([\r\n    {\r\n      id: 1,\r\n      courseName: 'Java Core',\r\n      instructor: 'Nguyễn Văn A',\r\n      lessons: 20,\r\n      description: 'Cung cấp kiến thức cơ bản về OOP, design pattern',\r\n      startDate: '2023-01-01',\r\n      endDate: '2023-03-31',\r\n      status: 'Hoạt động',\r\n      objectives: [],\r\n      lectures: [],\r\n      coverImage: null,\r\n      students: []\r\n    },\r\n    {\r\n      id: 2,\r\n      courseName: 'ReactJS',\r\n      instructor: 'Trần Thị B',\r\n      lessons: 15,\r\n      description: 'Học cách xây dựng ứng dụng với ReactJS',\r\n      startDate: '2023-02-01',\r\n      endDate: '2023-04-30',\r\n      status: 'Không hoạt động',\r\n      objectives: [],\r\n      lectures: [],\r\n      coverImage: null,\r\n      students: []\r\n    }\r\n  ]);\r\n\r\n  const [users, setUsers] = useState([\r\n    {\r\n      id: 1,\r\n      userCode: 'user001',\r\n      name: 'Nguyễn Văn A',\r\n      email: 'nguyenvana@example.com',\r\n      role: 'Instructor',\r\n      status: 'Active'\r\n    },\r\n    {\r\n      id: 2,\r\n      userCode: 'user002',\r\n      name: 'Trần Thị B',\r\n      email: 'tranb@example.com',\r\n      role: 'Student',\r\n      status: 'Disabled'\r\n    }\r\n  ]);\r\n\r\n  const addCourse = (newCourse) => {\r\n    setCourses((prevCourses) => [...prevCourses, newCourse]);\r\n  };\r\n\r\n  const updateCourse = (updatedCourse) => {\r\n    setCourses((prevCourses) =>\r\n      prevCourses.map((course) =>\r\n        course.id === updatedCourse.id ? updatedCourse : course\r\n      )\r\n    );\r\n  };\r\n\r\n  const addUser = (newUser) => {\r\n    setUsers((prevUsers) => [...prevUsers, newUser]);\r\n  };\r\n\r\n  const updateUser = (updatedUser) => {\r\n    setUsers((prevUsers) =>\r\n      prevUsers.map((user) =>\r\n        user.id === updatedUser.id ? updatedUser : user\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <Sidebara />\r\n\r\n        <div className=\"main-content\">\r\n          <Header title=\"Quản trị hệ thống\" />\r\n\r\n          <Routes>\r\n            <Route path=\"/user-management\" element={<UserManagement users={users} updateUser={updateUser} />} />\r\n            <Route path=\"/course-management\" element={<CourseManagement courses={courses} updateCourse={updateCourse} />} />\r\n            <Route path=\"/add-course\" element={<AddCourse addCourse={addCourse} />} />\r\n            <Route path=\"/edit-course/:id\" element={<EditCourse updateCourse={updateCourse} />} />\r\n            \r\n            <Route path=\"/\" element={<Navigate to=\"/course-management\" />} />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n/**          function App() {\r\n  const [courses, setCourses] = useState([\r\n    {\r\n      id: 1,\r\n      courseName: 'Java Core',\r\n      instructor: 'Nguyễn Văn A',\r\n      lessons: 20,\r\n      description: 'Cung cấp kiến thức cơ bản về OOP, design pattern',\r\n      startDate: '2023-01-01',\r\n      endDate: '2023-03-31',\r\n      status: 'Hoạt động',\r\n      objectives: [],\r\n      lectures: [],\r\n      coverImage: null,\r\n      students: []\r\n    },\r\n    {\r\n      id: 2,\r\n      courseName: 'ReactJS',\r\n      instructor: 'Trần Thị B',\r\n      lessons: 15,\r\n      description: 'Học cách xây dựng ứng dụng với ReactJS',\r\n      startDate: '2023-02-01',\r\n      endDate: '2023-04-30',\r\n      status: 'Không hoạt động',\r\n      objectives: [],\r\n      lectures: [],\r\n      coverImage: null,\r\n      students: []\r\n    }\r\n  ]);\r\n\r\n  const [users, setUsers] = useState([\r\n    {\r\n      id: 1,\r\n      userCode: 'user001',\r\n      name: 'Nguyễn Văn A',\r\n      email: 'nguyenvana@example.com',\r\n      role: 'Instructor',\r\n      status: 'Active'\r\n    },\r\n    {\r\n      id: 2,\r\n      userCode: 'user002',\r\n      name: 'Trần Thị B',\r\n      email: 'tranb@example.com',\r\n      role: 'Student',\r\n      status: 'Disabled'\r\n    }\r\n  ]);\r\n\r\n  const addCourse = (newCourse) => {\r\n    setCourses((prevCourses) => [...prevCourses, newCourse]);\r\n  };\r\n\r\n  const updateCourse = (updatedCourse) => {\r\n    setCourses((prevCourses) =>\r\n      prevCourses.map((course) =>\r\n        course.id === updatedCourse.id ? updatedCourse : course\r\n      )\r\n    );\r\n  };\r\n\r\n  const addUser = (newUser) => {\r\n    setUsers((prevUsers) => [...prevUsers, newUser]);\r\n  };\r\n\r\n  const updateUser = (updatedUser) => {\r\n    setUsers((prevUsers) =>\r\n      prevUsers.map((user) =>\r\n        user.id === updatedUser.id ? updatedUser : user\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <Sidebara />\r\n\r\n        <div className=\"main-content\">\r\n          <Header title=\"Quản trị hệ thống\" />\r\n\r\n          <Routes>\r\n            <Route path=\"/user-management\" element={<UserManagement users={users} updateUser={updateUser} />} />\r\n            <Route path=\"/course-management\" element={<CourseManagement courses={courses} updateCourse={updateCourse} />} />\r\n            <Route path=\"/add-course\" element={<AddCourse addCourse={addCourse} />} />\r\n            <Route path=\"/edit-course/:id\" element={<EditCourse updateCourse={updateCourse} />} />\r\n            \r\n            <Route path=\"/\" element={<Navigate to=\"/course-management\" />} />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n*/\r\n\r\n\r\n\r\n\r\n/**         function AppContent() {\r\n  const [courses, setCourses] = useState([]);\r\n  const location = useLocation();  // Sử dụng useLocation để lấy đường dẫn hiện tại\r\n  const showFooterPaths = [\"/home\", \"/my-course\", \"/progress\", \"/article\"];\r\n  const shouldShowFooter = showFooterPaths.includes(location.pathname); // Kiểm tra xem footer có hiển thị không\r\n\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <div className=\"container\">\r\n        <Sidebar />\r\n        <div className=\"content\">\r\n          <Routes>\r\n            <Route path=\"/home\" element={<><Header title=\"Trang chủ\" isSearch={true} /><Home /></>} />\r\n            <Route path=\"/my-course\" element={<><Header title=\"Khóa học của tôi\" /><MyCourse /></>} />\r\n            <Route path=\"/progress\" element={<><Header title=\"Tiến độ học tập\" /><LearningProgress /></>} />\r\n            <Route path=\"/article\" element={<><Header title=\"Bài viết\" /><Article /></>} />\r\n            <Route path=\"/course/:courseId\" element={<><Header title=\"Thông tin khóa học\" /><CourseReactJS courses={courses} /></>} />\r\n            <Route path=\"/learn1\" element={<><Header title=\"Học ReactJS\" /><Learn1 /></>} />\r\n            <Route path=\"*\" element={<Navigate to=\"/home\" />} />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n      {shouldShowFooter && <Footer />}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <AppContent />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App; \r\n   */\r\n\r\n\r\n      /**        <div className=\"container\">\r\n        <Sidebara />\r\n        <Routes>\r\n                    <Route path=\"/user-management\" element={<><Headera title=\"Quản lý người dùng\" /><UserManagement /></>} />\r\n                    <Route path=\"/course-management\" element={<><Headera title=\"Quản lý khóa học\" /><CourseManagement courses={courses} /></>} />\r\n                    <Route path=\"/add-course\" element={<><Headera title=\"Thêm khóa học\" /><AddCourseModal /></>} />\r\n                    <Route path=\"/\" element={<Navigate to=\"/admin/course-management\" />} />\r\n                  </Routes>\r\n        </div> */\r\n\r\n\r\n      /*giangvien\r\n                      <div className=\"app-wrapper\">\r\n          <Sidebars />\r\n          <div className=\"content\">\r\n            <Routes>\r\n              <Route\r\n                path=\"/homeg\"\r\n                element={<><Headers title=\"Trang chủ giảng viên\" /><Homeg /></>}\r\n              />\r\n              <Route\r\n                path=\"/courses\"\r\n                element={<><Headers title=\"Danh sách khóa học\" /><CourseTable /></>}\r\n              />\r\n              <Route\r\n                path=\"/create-course\"\r\n                element={<><Headers title=\"Tạo khóa học mới\" /><CourseForm isEdit={false} /></>}\r\n              />\r\n              <Route\r\n                path=\"/edit-course/:id\"\r\n                element={<><Headers title=\"Chỉnh sửa khóa học\" /><Feature isEdit={true} /></>}\r\n              />\r\n              <Route\r\n                path=\"/course-info/:id\"\r\n                element={<><Headers title=\"Thông tin khóa học\" /><CourseInfo /></>}\r\n              />\r\n              <Route\r\n                path=\"/feedback\"\r\n                element={<><Headers title=\"Phản hồi từ học viên\" /><FeedbackList /></>}\r\n              />\r\n              <Route path=\"*\" element={<Navigate to=\"/homeg\" />} />\r\n            </Routes>\r\n          </div>\r\n        </div>*/\r\n\r\n\r\n     \r\n\r\n\r\n  /*import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Navigate, useLocation } from 'react-router-dom';\r\nimport './App.css';\r\nimport Login from './components/Page/Login';\r\nimport Signup from './components/Page/Signup';\r\nimport Welcome from'./components/Page/Welcome';\r\n// Student Components\r\nimport Sidebar from './components/Student/Layout/Sidebar';\r\nimport Header from './components/Student/Layout/Header';\r\nimport Footer from './components/Student/Layout/Footer';\r\nimport Home from './components/Student/Routes/Home';\r\nimport MyCourse from './components/Student/Routes/MyCourse';\r\nimport LearningProgress from './components/Student/Routes/LearningProgress';\r\nimport Article from './components/Student/Routes/Article';\r\nimport CourseReactJS from './components/Student/Routes/Course Information/CourseReactJS';\r\nimport Learn1 from './components/Student/Routes/Course Information/Study Course/Learn1';\r\n\r\n// Lecturer Components\r\nimport Sidebars from './components/Lecturer/Layouts/Sidebar';\r\nimport Homes from './components/Lecturer/Routes/Homes';\r\nimport CourseForm from './components/Lecturer/Routes/CourseForm';\r\nimport CourseInfo from './components/Lecturer/Routes/CourseInfo';\r\nimport CourseTable from './components/Lecturer/Routes/CourseTable';\r\nimport CourseList from './components/Lecturer/Routes/CourseList';\r\nimport FeedbackList from './components/Lecturer/Routes/FeedbackList';\r\nimport Feature from './components/Lecturer/Routes/Feature';\r\n\r\n// Admin Components\r\nimport Headera from './components/Admin/Layout/Headera';\r\nimport Sidebara from './components/Admin/Layout/Sidebara';\r\nimport UserManagement from './components/Admin/User/UserManagement';\r\nimport AddUserModal from './components/Admin/User/Function/Add';\r\nimport ConfirmModal from './components/Admin/Course/Function/Confirm';\r\nimport EditUserModal from './components/Admin/User/Function/Edit';\r\nimport UserSearchForm from './components/Admin/User/Function/Search';\r\nimport CourseManagement from './components/Admin/Course/CourseManagement';\r\nimport AddCourse from './components/Admin/Course/Function/AddCourse';\r\nimport ConfirmModalCousre from './components/Admin/Course/Function/Confirm';\r\nimport EditCourse from './components/Admin/Course/Function/EditCourse';\r\nimport SearchCourses from './components/Admin/Course/Function/Search';\r\nimport Modala from './components/Admin/Course/Function/Modala';\r\n\r\nfunction AppContent() {\r\n  const [courses, setCourses] = useState([]);\r\n  const location = useLocation();\r\n  const showFooterPaths = [\"/home\", \"/my-course\", \"/progress\", \"/article\"];\r\n  const shouldShowFooter = showFooterPaths.includes(location.pathname);\r\n\r\n  // Check if the current path is either login or signup\r\n  const isAuthPage = location.pathname === \"/login\" || location.pathname === \"/signup\";\r\n\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <div className=\"container\">\r\n        {!isAuthPage && (\r\n          location.pathname.includes(\"/admin\") ? (\r\n            <>\r\n              <Sidebara />\r\n              <Headera title=\"Admin Panel\" />\r\n            </>\r\n          ) : location.pathname.includes(\"/lecturer\") ? (\r\n            <>\r\n              <Sidebars />\r\n              <Headera title=\"Lecturer Panel\" />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Sidebar />\r\n              <Header title=\"Student Panel\" />\r\n            </>\r\n          )\r\n        )}\r\n\r\n        <div className=\"content\">\r\n          <Routes>\r\n            <Route path=\"/home\" element={<Home />} />\r\n            <Route path=\"/my-course\" element={<MyCourse />} />\r\n            <Route path=\"/progress\" element={<LearningProgress />} />\r\n            <Route path=\"/article\" element={<Article />} />\r\n            <Route path=\"/course/:courseId\" element={<CourseReactJS courses={courses} />} />\r\n            <Route path=\"/learn1\" element={<Learn1 />} />\r\n\r\n            <Route path=\"/lecturer/home\" element={<Homes />} />\r\n            <Route path=\"/lecturer/course-form\" element={<CourseForm />} />\r\n            <Route path=\"/lecturer/course-info\" element={<CourseInfo />} />\r\n            <Route path=\"/lecturer/course-table\" element={<CourseTable />} />\r\n            <Route path=\"/lecturer/course-list\" element={<CourseList />} />\r\n            <Route path=\"/lecturer/feedback-list\" element={<FeedbackList />} />\r\n            <Route path=\"/lecturer/feature\" element={<Feature />} />\r\n\r\n            <Route path=\"/admin/user-management\" element={<UserManagement />} />\r\n            <Route path=\"/admin/add-user\" element={<AddUserModal />} />\r\n            <Route path=\"/admin/edit-user/:id\" element={<EditUserModal />} />\r\n            <Route path=\"/admin/course-management\" element={<CourseManagement courses={courses} />} />\r\n            <Route path=\"/admin/add-course\" element={<AddCourse />} />\r\n            <Route path=\"/admin/edit-course/:id\" element={<EditCourse />} />\r\n            <Route path=\"/admin/search-courses\" element={<SearchCourses />} />\r\n            <Route path=\"/admin/confirm\" element={<ConfirmModal />} />\r\n\r\n            <Route path=\"/login\" element={<Login />} />\r\n            <Route path=\"/signup\" element={<Signup />} />\r\n\r\n            <Route path=\"*\" element={<Navigate to=\"/home\" />} />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n      {shouldShowFooter && <Footer />}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <AppContent />\r\n    </Router>\r\n  );\r\n}\r\n\r\n// Make sure you're exporting the App component by default\r\nexport default App;\r\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}