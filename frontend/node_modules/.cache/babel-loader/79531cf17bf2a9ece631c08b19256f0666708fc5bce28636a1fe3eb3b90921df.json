{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { CFormLabel } from './CFormLabel.js';\nvar CFormSwitch = forwardRef(function (_a, ref) {\n  var _b;\n  var className = _a.className,\n    id = _a.id,\n    invalid = _a.invalid,\n    label = _a.label,\n    reverse = _a.reverse,\n    size = _a.size,\n    _c = _a.type,\n    type = _c === undefined ? 'checkbox' : _c,\n    valid = _a.valid,\n    rest = __rest(_a, [\"className\", \"id\", \"invalid\", \"label\", \"reverse\", \"size\", \"type\", \"valid\"]);\n  return React.createElement(\"div\", {\n    className: classNames('form-check form-switch', (_b = {\n      'form-check-reverse': reverse\n    }, _b[\"form-switch-\".concat(size)] = size, _b['is-invalid'] = invalid, _b['is-valid'] = valid, _b), className)\n  }, React.createElement(\"input\", __assign({\n    type: type,\n    className: classNames('form-check-input', {\n      'is-invalid': invalid,\n      'is-valid': valid\n    }),\n    id: id\n  }, rest, {\n    ref: ref\n  })), label && React.createElement(CFormLabel, __assign({\n    customClassName: \"form-check-label\"\n  }, id && {\n    htmlFor: id\n  }), label));\n});\nCFormSwitch.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  invalid: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  reverse: PropTypes.bool,\n  size: PropTypes.oneOf(['lg', 'xl']),\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n  valid: PropTypes.bool\n};\nCFormSwitch.displayName = 'CFormSwitch';\nexport { CFormSwitch };","map":{"version":3,"names":["CFormSwitch","forwardRef","_a","ref","className","id","invalid","label","reverse","size","_c","type","undefined","valid","rest","__rest","React","createElement","classNames","_b","concat","__assign","CFormLabel","customClassName","htmlFor","propTypes","PropTypes","string","bool","oneOfType","node","oneOf","displayName"],"sources":["C:\\CMC_UNI\\CMC_Global\\PROJECT\\E_Learning\\frontend\\node_modules\\@coreui\\react\\src\\components\\form\\CFormSwitch.tsx"],"sourcesContent":["import React, { forwardRef, InputHTMLAttributes, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CFormLabel } from './CFormLabel'\n\nexport interface CFormSwitchProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'size'> {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * The id global attribute defines an identifier (ID) that must be unique in the whole document.\n   */\n  id?: string\n  /**\n   * Set component validation state to invalid.\n   */\n  invalid?: boolean\n  /**\n   * The element represents a caption for a component.\n   */\n  label?: string | ReactNode\n  /**\n   * Put switch on the opposite side.\n   *\n   * @sinve 4.7.0\n   */\n  reverse?: boolean\n  /**\n   * Size the component large or extra large. Works only with `switch`.\n   */\n  size?: 'lg' | 'xl'\n  /**\n   * Specifies the type of component.\n   */\n  type?: 'checkbox' | 'radio'\n  /**\n   * Set component validation state to valid.\n   */\n  valid?: boolean\n}\n\nexport const CFormSwitch = forwardRef<HTMLInputElement, CFormSwitchProps>(\n  ({ className, id, invalid, label, reverse, size, type = 'checkbox', valid, ...rest }, ref) => {\n    return (\n      <div\n        className={classNames(\n          'form-check form-switch',\n          {\n            'form-check-reverse': reverse,\n            [`form-switch-${size}`]: size,\n            'is-invalid': invalid,\n            'is-valid': valid,\n          },\n          className,\n        )}\n      >\n        <input\n          type={type}\n          className={classNames('form-check-input', {\n            'is-invalid': invalid,\n            'is-valid': valid,\n          })}\n          id={id}\n          {...rest}\n          ref={ref}\n        />\n        {label && (\n          <CFormLabel customClassName=\"form-check-label\" {...(id && { htmlFor: id })}>\n            {label}\n          </CFormLabel>\n        )}\n      </div>\n    )\n  },\n)\n\nCFormSwitch.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  invalid: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  reverse: PropTypes.bool,\n  size: PropTypes.oneOf(['lg', 'xl']),\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n  valid: PropTypes.bool,\n}\n\nCFormSwitch.displayName = 'CFormSwitch'\n"],"mappings":";;;;;IA2CaA,WAAW,GAAGC,UAAU,CACnC,UAACC,EAAmF,EAAEC,GAAG;;EAAtF,IAAAC,SAAS,GAAAF,EAAA,CAAAE,SAAA;IAAEC,EAAE,GAAAH,EAAA,CAAAG,EAAA;IAAEC,OAAO,GAAAJ,EAAA,CAAAI,OAAA;IAAEC,KAAK,GAAAL,EAAA,CAAAK,KAAA;IAAEC,OAAO,GAAAN,EAAA,CAAAM,OAAA;IAAEC,IAAI,GAAAP,EAAA,CAAAO,IAAA;IAAEC,EAAA,GAAAR,EAAA,CAAAS,IAAiB;IAAjBA,IAAI,GAAAD,EAAA,KAAAE,SAAA,GAAG,UAAU,GAAAF,EAAA;IAAEG,KAAK,GAAAX,EAAA,CAAAW,KAAA;IAAKC,IAAI,GAAAC,MAAA,CAAAb,EAAA,EAAjF,2EAAmF,CAAF;EAChF,OACEc,KACE,CAAAC,aAAA;IAAAb,SAAS,EAAEc,UAAU,CACnB,wBAAwB,GAAAC,EAAA;MAEtB,oBAAoB,EAAEX;OACtBW,EAAA,CAAC,cAAe,CAAAC,MAAA,CAAAX,IAAI,CAAE,IAAGA,IAAI,EAC7BU,EAAA,cAAY,GAAEb,OAAO,EACrBa,EAAA,YAAU,GAAEN,KAAK,EAEnBM,EAAA,GAAAf,SAAS;EACV,GAEDY,KACE,CAAAC,aAAA,UAAAI,QAAA;IAAAV,IAAI,EAAEA,IAAI;IACVP,SAAS,EAAEc,UAAU,CAAC,kBAAkB,EAAE;MACxC,YAAY,EAAEZ,OAAO;MACrB,UAAU,EAAEO;KACb,CAAC;IACFR,EAAE,EAAEA;EAAE,GACFS,IAAI,EACR;IAAAX,GAAG,EAAEA;EAAG,CACR,IACDI,KAAK,IACJS,KAAA,CAAAC,aAAA,CAACK,UAAU,EAAAD,QAAA;IAACE,eAAe,EAAC;EAAkB,CAAK,EAAClB,EAAE,IAAI;IAAEmB,OAAO,EAAEnB;EAAE,CAAE,CAAC,EACvEE,KAAK,CAET,CACG;AAEV,CAAC;AAGHP,WAAW,CAACyB,SAAS,GAAG;EACtBrB,SAAS,EAAEsB,SAAS,CAACC,MAAM;EAC3BtB,EAAE,EAAEqB,SAAS,CAACC,MAAM;EACpBrB,OAAO,EAAEoB,SAAS,CAACE,IAAI;EACvBrB,KAAK,EAAEmB,SAAS,CAACG,SAAS,CAAC,CAACH,SAAS,CAACC,MAAM,EAAED,SAAS,CAACI,IAAI,CAAC,CAAC;EAC9DtB,OAAO,EAAEkB,SAAS,CAACE,IAAI;EACvBnB,IAAI,EAAEiB,SAAS,CAACK,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACnCpB,IAAI,EAAEe,SAAS,CAACK,KAAK,CAAC,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;EAC5ClB,KAAK,EAAEa,SAAS,CAACE;CAClB;AAED5B,WAAW,CAACgC,WAAW,GAAG,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}