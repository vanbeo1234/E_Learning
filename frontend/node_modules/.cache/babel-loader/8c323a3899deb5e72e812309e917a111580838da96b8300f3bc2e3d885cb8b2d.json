{"ast":null,"code":"import { __module as classnames } from '../../_virtual/index2.js';\n\n/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n\nvar hasRequiredClassnames;\nfunction requireClassnames() {\n  if (hasRequiredClassnames) return classnames.exports;\n  hasRequiredClassnames = 1;\n  (function (module) {\n    /* global define */\n\n    (function () {\n      var hasOwn = {}.hasOwnProperty;\n      function classNames() {\n        var classes = '';\n        for (var i = 0; i < arguments.length; i++) {\n          var arg = arguments[i];\n          if (arg) {\n            classes = appendClass(classes, parseValue(arg));\n          }\n        }\n        return classes;\n      }\n      function parseValue(arg) {\n        if (typeof arg === 'string' || typeof arg === 'number') {\n          return arg;\n        }\n        if (typeof arg !== 'object') {\n          return '';\n        }\n        if (Array.isArray(arg)) {\n          return classNames.apply(null, arg);\n        }\n        if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n          return arg.toString();\n        }\n        var classes = '';\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes = appendClass(classes, key);\n          }\n        }\n        return classes;\n      }\n      function appendClass(value, newClass) {\n        if (!newClass) {\n          return value;\n        }\n        if (value) {\n          return value + ' ' + newClass;\n        }\n        return value + newClass;\n      }\n      if (module.exports) {\n        classNames.default = classNames;\n        module.exports = classNames;\n      } else {\n        window.classNames = classNames;\n      }\n    })();\n  })(classnames);\n  return classnames.exports;\n}\nexport { requireClassnames as __require };","map":{"version":3,"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","appendClass","parseValue","Array","isArray","apply","toString","Object","prototype","includes","key","call","value","newClass","module","exports","default","window"],"sources":["C:\\CMC_UNI\\CMC_Global\\PROJECT\\E_Learning\\frontend\\node_modules\\@coreui\\classnames\\index.js"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"mappings":";;;;;;;;;;;;;IAKA;;IAEC,aAAY;MAGZ,IAAIA,MAAM,GAAG,EAAE,CAACC,cAAc;MAE9B,SAASC,UAAUA,CAAA,EAAI;QACtB,IAAIC,OAAO,GAAG,EAAE;QAEhB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;UAC1C,IAAIG,GAAG,GAAGF,SAAS,CAACD,CAAC,CAAC;UACtB,IAAIG,GAAG,EAAE;YACRJ,OAAO,GAAGK,WAAW,CAACL,OAAO,EAAEM,UAAU,CAACF,GAAG,CAAC,CAAC;UACnD;QACA;QAEE,OAAOJ,OAAO;MAChB;MAEC,SAASM,UAAUA,CAAEF,GAAG,EAAE;QACzB,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;UACvD,OAAOA,GAAG;QACb;QAEE,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;UAC5B,OAAO,EAAE;QACZ;QAEE,IAAIG,KAAK,CAACC,OAAO,CAACJ,GAAG,CAAC,EAAE;UACvB,OAAOL,UAAU,CAACU,KAAK,CAAC,IAAI,EAAEL,GAAG,CAAC;QACrC;QAEE,IAAIA,GAAG,CAACM,QAAQ,KAAKC,MAAM,CAACC,SAAS,CAACF,QAAQ,IAAI,CAACN,GAAG,CAACM,QAAQ,CAACA,QAAQ,EAAE,CAACG,QAAQ,CAAC,eAAe,CAAC,EAAE;UACrG,OAAOT,GAAG,CAACM,QAAQ,EAAE;QACxB;QAEE,IAAIV,OAAO,GAAG,EAAE;QAEhB,KAAK,IAAIc,GAAG,IAAIV,GAAG,EAAE;UACpB,IAAIP,MAAM,CAACkB,IAAI,CAACX,GAAG,EAAEU,GAAG,CAAC,IAAIV,GAAG,CAACU,GAAG,CAAC,EAAE;YACtCd,OAAO,GAAGK,WAAW,CAACL,OAAO,EAAEc,GAAG,CAAC;UACvC;QACA;QAEE,OAAOd,OAAO;MAChB;MAEC,SAASK,WAAWA,CAAEW,KAAK,EAAEC,QAAQ,EAAE;QACtC,IAAI,CAACA,QAAQ,EAAE;UACd,OAAOD,KAAK;QACf;QAEE,IAAIA,KAAK,EAAE;UACV,OAAOA,KAAK,GAAG,GAAG,GAAGC,QAAQ;QAChC;QAEE,OAAOD,KAAK,GAAGC,QAAQ;MACzB;MAEC,IAAqCC,MAAM,CAACC,OAAO,EAAE;QACpDpB,UAAU,CAACqB,OAAO,GAAGrB,UAAU;QAC/BmB,MAAA,CAAAC,OAAA,GAAiBpB,UAAU;MAC7B,CAAE,MAKM;QACNsB,MAAM,CAACtB,UAAU,GAAGA,UAAU;MAChC;IACA,CAAC,GAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}