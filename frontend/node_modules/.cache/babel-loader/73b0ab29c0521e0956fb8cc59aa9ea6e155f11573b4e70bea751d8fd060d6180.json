{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nvar CLink = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    active = _a.active,\n    _b = _a.as,\n    Component = _b === undefined ? 'a' : _b,\n    className = _a.className,\n    disabled = _a.disabled,\n    rest = __rest(_a, [\"children\", \"active\", \"as\", \"className\", \"disabled\"]);\n  return React.createElement(Component\n  // TODO: remove duplicated classes ex. `active active` in `<CListGroupItem>`\n  , __assign({\n    // TODO: remove duplicated classes ex. `active active` in `<CListGroupItem>`\n    className: classNames(className, {\n      active: active,\n      disabled: disabled\n    })\n  }, active && {\n    'aria-current': 'page'\n  }, Component === 'a' && disabled && {\n    'aria-disabled': true,\n    tabIndex: -1\n  }, (Component === 'a' || Component === 'button') && {\n    onClick: function (event) {\n      event.preventDefault;\n      !disabled && rest.onClick && rest.onClick(event);\n    }\n  }, {\n    disabled: disabled\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCLink.propTypes = {\n  active: PropTypes.bool,\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  disabled: PropTypes.bool\n};\nCLink.displayName = 'CLink';\nexport { CLink };","map":{"version":3,"names":["CLink","forwardRef","_a","ref","children","active","_b","as","Component","undefined","className","disabled","rest","__rest","React","createElement","classNames","tabIndex","onClick","event","preventDefault","propTypes","PropTypes","bool","elementType","node","string","displayName"],"sources":["C:\\CMC_UNI\\CMC_Global\\PROJECT\\E_Learning\\frontend\\node_modules\\@coreui\\react\\src\\components\\link\\CLink.tsx"],"sourcesContent":["import React, { AllHTMLAttributes, ElementType, forwardRef, MouseEvent } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CLinkProps\n  extends Omit<AllHTMLAttributes<HTMLButtonElement | HTMLAnchorElement>, 'as'> {\n  /**\n   * Toggle the active state for the component.\n   */\n  active?: boolean\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Toggle the disabled state for the component.\n   */\n  disabled?: boolean\n  /**\n   * The href attribute specifies the URL of the page the link goes to.\n   */\n  href?: string\n}\n\nexport const CLink: PolymorphicRefForwardingComponent<'a', CLinkProps> = forwardRef<\n  HTMLButtonElement | HTMLAnchorElement,\n  CLinkProps\n>(({ children, active, as: Component = 'a', className, disabled, ...rest }, ref) => {\n  return (\n    <Component\n      // TODO: remove duplicated classes ex. `active active` in `<CListGroupItem>`\n      className={classNames(className, { active, disabled })}\n      {...(active && { 'aria-current': 'page' })}\n      {...(Component === 'a' && disabled && { 'aria-disabled': true, tabIndex: -1 })}\n      {...((Component === 'a' || Component === 'button') && {\n        onClick: (event: MouseEvent<HTMLButtonElement | HTMLAnchorElement>) => {\n          event.preventDefault\n          !disabled && rest.onClick && rest.onClick(event)\n        },\n      })}\n      disabled={disabled}\n      {...rest}\n      ref={ref}\n    >\n      {children}\n    </Component>\n  )\n})\n\nCLink.propTypes = {\n  active: PropTypes.bool,\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n}\n\nCLink.displayName = 'CLink'\n"],"mappings":";;;;IA8BaA,KAAK,GAAuDC,UAAU,CAGjF,UAACC,EAAuE,EAAEC,GAAG;EAA1E,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,MAAM,GAAAH,EAAA,CAAAG,MAAA;IAAEC,EAAA,GAAAJ,EAAA,CAAAK,EAAmB;IAAfC,SAAS,GAAGF,EAAA,KAAAG,SAAA,MAAG,GAAAH,EAAA;IAAEI,SAAS,GAAAR,EAAA,CAAAQ,SAAA;IAAEC,QAAQ,GAAAT,EAAA,CAAAS,QAAA;IAAKC,IAAI,GAArEC,MAAA,CAAAX,EAAA,uDAAuE,CAAF;EACtE,OACEY,KAAA,CAAAC,aAAA,CAACP;;;;IAECE,SAAS,EAAEM,UAAU,CAACN,SAAS,EAAE;MAAEL,MAAM,EAAAA,MAAA;MAAEM,QAAQ,EAAAA;IAAA,CAAE;EAAC,CAClD,EAACN,MAAM,IAAI;IAAE,cAAc,EAAE;EAAM,CAAE,EACpCG,SAAS,KAAK,GAAG,IAAIG,QAAQ,IAAI;IAAE,eAAe,EAAE,IAAI;IAAEM,QAAQ,EAAE;EAAE,CAAE,EACxE,CAACT,SAAS,KAAK,GAAG,IAAIA,SAAS,KAAK,QAAQ,KAAK;IACpDU,OAAO,EAAE,SAAAA,CAACC,KAAwD;MAChEA,KAAK,CAACC,cAAc;MACpB,CAACT,QAAQ,IAAIC,IAAI,CAACM,OAAO,IAAIN,IAAI,CAACM,OAAO,CAACC,KAAK,CAAC;;EAEnD,GACD;IAAAR,QAAQ,EAAEA;EAAQ,GACdC,IAAI;IACRT,GAAG,EAAEA;EAAG,IAEPC,QAAQ,CACC;AAEhB,CAAC;AAEDJ,KAAK,CAACqB,SAAS,GAAG;EAChBhB,MAAM,EAAEiB,SAAS,CAACC,IAAI;EACtBhB,EAAE,EAAEe,SAAS,CAACE,WAAW;EACzBpB,QAAQ,EAAEkB,SAAS,CAACG,IAAI;EACxBf,SAAS,EAAEY,SAAS,CAACI,MAAM;EAC3Bf,QAAQ,EAAEW,SAAS,CAACC;CACrB;AAEDvB,KAAK,CAAC2B,WAAW,GAAG,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}