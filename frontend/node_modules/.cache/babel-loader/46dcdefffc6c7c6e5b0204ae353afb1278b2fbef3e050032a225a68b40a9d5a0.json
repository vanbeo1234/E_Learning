{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useContext, useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { useForkedRef } from '../../hooks/useForkedRef.js';\nimport '@popperjs/core';\nimport { CCarouselContext } from './CCarousel.js';\nvar CCarouselItem = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    className = _a.className,\n    active = _a.active,\n    direction = _a.direction,\n    _b = _a.interval,\n    interval = _b === undefined ? false : _b,\n    rest = __rest(_a, [\"children\", \"className\", \"active\", \"direction\", \"interval\"]);\n  var _c = useContext(CCarouselContext),\n    setAnimating = _c.setAnimating,\n    setCustomInterval = _c.setCustomInterval;\n  var carouselItemRef = useRef(null);\n  var forkedRef = useForkedRef(ref, carouselItemRef);\n  var prevActive = useRef();\n  var _d = useState(),\n    directionClassName = _d[0],\n    setDirectionClassName = _d[1];\n  var _e = useState(),\n    orderClassName = _e[0],\n    setOrderClassName = _e[1];\n  var _f = useState(active && 'active'),\n    activeClassName = _f[0],\n    setActiveClassName = _f[1];\n  var _g = useState(0),\n    count = _g[0],\n    setCount = _g[1];\n  useEffect(function () {\n    if (active) {\n      setCustomInterval(interval);\n      if (count !== 0) setOrderClassName(\"carousel-item-\".concat(direction));\n    }\n    if (prevActive.current && !active) {\n      setActiveClassName('active');\n    }\n    if (active || prevActive.current) {\n      setTimeout(function () {\n        var _a;\n        if (count !== 0) {\n          // @ts-expect-error reflow is necessary to proper transition\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          (_a = carouselItemRef.current) === null || _a === undefined ? undefined : _a.offsetHeight;\n          setDirectionClassName(\"carousel-item-\".concat(direction === 'next' ? 'start' : 'end'));\n        }\n      }, 0);\n    }\n    prevActive.current = active;\n    if (count === 0) setCount(count + 1);\n  }, [active]);\n  useEffect(function () {\n    var _a, _b;\n    (_a = carouselItemRef.current) === null || _a === undefined ? undefined : _a.addEventListener('transitionstart', function () {\n      active && setAnimating(true);\n    });\n    (_b = carouselItemRef.current) === null || _b === undefined ? undefined : _b.addEventListener('transitionend', function () {\n      active && setAnimating(false);\n      setDirectionClassName('');\n      setOrderClassName('');\n      if (active) {\n        setActiveClassName('active');\n      }\n      if (!active) {\n        setActiveClassName('');\n      }\n    });\n    return function () {\n      var _a, _b;\n      (_a = carouselItemRef.current) === null || _a === undefined ? undefined : _a.removeEventListener('transitionstart', function () {\n        active && setAnimating(true);\n      });\n      (_b = carouselItemRef.current) === null || _b === undefined ? undefined : _b.removeEventListener('transitionend', function () {\n        active && setAnimating(false);\n        setDirectionClassName('');\n        setOrderClassName('');\n        if (active) {\n          setActiveClassName('active');\n        }\n        if (!active) {\n          setActiveClassName('');\n        }\n      });\n    };\n  });\n  return React.createElement(\"div\", __assign({\n    className: classNames('carousel-item', activeClassName, directionClassName, orderClassName, className),\n    ref: forkedRef\n  }, rest), children);\n});\nCCarouselItem.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  direction: PropTypes.string,\n  interval: PropTypes.oneOfType([PropTypes.bool, PropTypes.number])\n};\nCCarouselItem.displayName = 'CCarouselItem';\nexport { CCarouselItem };","map":{"version":3,"names":["CCarouselItem","forwardRef","_a","ref","children","className","active","direction","_b","interval","undefined","rest","__rest","_c","useContext","CCarouselContext","setAnimating","setCustomInterval","carouselItemRef","useRef","forkedRef","useForkedRef","prevActive","_d","useState","directionClassName","setDirectionClassName","_e","orderClassName","setOrderClassName","_f","activeClassName","setActiveClassName","_g","count","setCount","useEffect","concat","current","setTimeout","offsetHeight","addEventListener","removeEventListener","React","createElement","__assign","classNames","propTypes","PropTypes","bool","node","string","oneOfType","number","displayName"],"sources":["C:\\CMC_UNI\\CMC_Global\\PROJECT\\E_Learning\\frontend\\node_modules\\@coreui\\react\\src\\components\\carousel\\CCarouselItem.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes, useContext, useEffect, useState, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { useForkedRef } from '../../hooks'\nimport { CCarouselContext } from './CCarousel'\nexport interface CCarouselItemProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * @ignore\n   */\n  active?: boolean\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * @ignore\n   */\n  direction?: string\n  /**\n   * The amount of time to delay between automatically cycling an item.\n   */\n  interval?: boolean | number\n}\n\nexport const CCarouselItem = forwardRef<HTMLDivElement, CCarouselItemProps>(\n  ({ children, className, active, direction, interval = false, ...rest }, ref) => {\n    const { setAnimating, setCustomInterval } = useContext(CCarouselContext)\n    const carouselItemRef = useRef<HTMLDivElement>(null)\n    const forkedRef = useForkedRef(ref, carouselItemRef)\n\n    const prevActive = useRef<boolean>()\n    const [directionClassName, setDirectionClassName] = useState<string>()\n    const [orderClassName, setOrderClassName] = useState<string>()\n    const [activeClassName, setActiveClassName] = useState(active && 'active')\n    const [count, setCount] = useState(0)\n\n    useEffect(() => {\n      if (active) {\n        setCustomInterval(interval)\n        if (count !== 0) setOrderClassName(`carousel-item-${direction}`)\n      }\n\n      if (prevActive.current && !active) {\n        setActiveClassName('active')\n      }\n\n      if (active || prevActive.current) {\n        setTimeout(() => {\n          if (count !== 0) {\n            // @ts-expect-error reflow is necessary to proper transition\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const reflow = carouselItemRef.current?.offsetHeight\n            setDirectionClassName(`carousel-item-${direction === 'next' ? 'start' : 'end'}`)\n          }\n        }, 0)\n      }\n\n      prevActive.current = active\n\n      if (count === 0) setCount(count + 1)\n    }, [active])\n\n    useEffect(() => {\n      carouselItemRef.current?.addEventListener('transitionstart', () => {\n        active && setAnimating(true)\n      })\n      carouselItemRef.current?.addEventListener('transitionend', () => {\n        active && setAnimating(false)\n        setDirectionClassName('')\n        setOrderClassName('')\n        if (active) {\n          setActiveClassName('active')\n        }\n        if (!active) {\n          setActiveClassName('')\n        }\n      })\n      return () => {\n        carouselItemRef.current?.removeEventListener('transitionstart', () => {\n          active && setAnimating(true)\n        })\n        carouselItemRef.current?.removeEventListener('transitionend', () => {\n          active && setAnimating(false)\n          setDirectionClassName('')\n          setOrderClassName('')\n          if (active) {\n            setActiveClassName('active')\n          }\n          if (!active) {\n            setActiveClassName('')\n          }\n        })\n      }\n    })\n\n    return (\n      <div\n        className={classNames(\n          'carousel-item',\n          activeClassName,\n          directionClassName,\n          orderClassName,\n          className,\n        )}\n        ref={forkedRef}\n        {...rest}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nCCarouselItem.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  direction: PropTypes.string,\n  interval: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n}\n\nCCarouselItem.displayName = 'CCarouselItem'\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}