{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../_virtual/index.js';\nimport { CLink } from '../link/CLink.js';\nvar CBreadcrumbItem = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    active = _a.active,\n    as = _a.as,\n    className = _a.className,\n    href = _a.href,\n    rest = __rest(_a, [\"children\", \"active\", \"as\", \"className\", \"href\"]);\n  return React.createElement(\"li\", __assign({\n    className: classNames('breadcrumb-item', {\n      active: active\n    }, className)\n  }, active && {\n    'aria-current': 'page'\n  }, rest, {\n    ref: ref\n  }), href ? React.createElement(CLink, {\n    as: as,\n    href: href\n  }, children) : children);\n});\nCBreadcrumbItem.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  href: PropTypes.string\n};\nCBreadcrumbItem.displayName = 'CBreadcrumbItem';\nexport { CBreadcrumbItem };","map":{"version":3,"names":["CBreadcrumbItem","forwardRef","_a","ref","children","active","as","className","href","rest","__rest","React","createElement","__assign","classNames","CLink","propTypes","PropTypes","bool","node","string","displayName"],"sources":["C:\\CMC_UNI\\CMC_Global\\PROJECT\\E_Learning\\frontend\\node_modules\\@coreui\\react\\src\\components\\breadcrumb\\CBreadcrumbItem.tsx"],"sourcesContent":["import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CLink } from '../link/CLink'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CBreadcrumbItemProps extends HTMLAttributes<HTMLLIElement> {\n  /**\n   * Toggle the active state for the component.\n   */\n  active?: boolean\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   *\n   * @since 5.4.0\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * The `href` attribute for the inner `<CLink>` component.\n   */\n  href?: string\n}\n\nexport const CBreadcrumbItem: PolymorphicRefForwardingComponent<'li', CBreadcrumbItemProps> =\n  forwardRef<HTMLLIElement, CBreadcrumbItemProps>(\n    ({ children, active, as, className, href, ...rest }, ref) => {\n      return (\n        <li\n          className={classNames(\n            'breadcrumb-item',\n            {\n              active: active,\n            },\n            className,\n          )}\n          {...(active && { 'aria-current': 'page' })}\n          {...rest}\n          ref={ref}\n        >\n          {href ? (\n            <CLink as={as} href={href}>\n              {children}\n            </CLink>\n          ) : (\n            children\n          )}\n        </li>\n      )\n    },\n  )\n\nCBreadcrumbItem.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  href: PropTypes.string,\n}\n\nCBreadcrumbItem.displayName = 'CBreadcrumbItem'\n"],"mappings":";;;;;IA6BaA,eAAe,GAC1BC,UAAU,CACR,UAACC,EAAkD,EAAEC,GAAG;EAArD,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,MAAM,GAAAH,EAAA,CAAAG,MAAA;IAAEC,EAAE,GAAAJ,EAAA,CAAAI,EAAA;IAAEC,SAAS,GAAAL,EAAA,CAAAK,SAAA;IAAEC,IAAI,GAAAN,EAAA,CAAAM,IAAA;IAAKC,IAAI,GAAAC,MAAA,CAAAR,EAAA,EAAhD,iDAAkD,CAAF;EAC/C,OACES,KACE,CAAAC,aAAA,OAAAC,QAAA;IAAAN,SAAS,EAAEO,UAAU,CACnB,iBAAiB,EACjB;MACET,MAAM,EAAEA;KACT,EACDE,SAAS;EACV,CACG,EAACF,MAAM,IAAI;IAAE,cAAc,EAAE;EAAM,CAAE,EACrCI,IAAI,EACR;IAAAN,GAAG,EAAEA;EAAG,IAEPK,IAAI,GACHG,KAAC,CAAAC,aAAA,CAAAG,KAAK;IAACT,EAAE,EAAEA,EAAE;IAAEE,IAAI,EAAEA;EAAI,GACtBJ,QAAQ,CACH,GAERA,QACD,CACE;AAET,CAAC;AAGLJ,eAAe,CAACgB,SAAS,GAAG;EAC1BX,MAAM,EAAEY,SAAS,CAACC,IAAI;EACtBd,QAAQ,EAAEa,SAAS,CAACE,IAAI;EACxBZ,SAAS,EAAEU,SAAS,CAACG,MAAM;EAC3BZ,IAAI,EAAES,SAAS,CAACG;CACjB;AAEDpB,eAAe,CAACqB,WAAW,GAAG,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}