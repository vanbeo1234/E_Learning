{"ast":null,"code":"var _jsxFileName = \"C:\\\\CMC_UNI\\\\CMC_Global\\\\PROJECT\\\\E_Learning\\\\frontend\\\\src\\\\components\\\\Admin\\\\Course\\\\Function\\\\Modala.js\";\nimport React from 'react';\nimport '../../Style/adcm.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Modala = ({\n  show,\n  // For compatibility with AddCourse\n  type,\n  // New prop used in EditCourse (\"success\" or \"cancel\")\n  title,\n  content,\n  onClose,\n  onConfirm,\n  onCancel,\n  // For compatibility with AddCourse\n  confirmText = 'OK',\n  // For compatibility with AddCourse\n  cancelText = 'Cancel',\n  // For compatibility with AddCourse\n  modalClass = 'add-modal',\n  // For compatibility with AddCourse\n  children // For compatibility with AddCourse\n}) => {\n  // Use 'show' prop for AddCourse compatibility, otherwise assume modal is shown if type/title/content are provided\n  const isVisible = show !== undefined ? show : !!(type || title || content);\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal ${modalClass}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"modal-close-btn\",\n        onClick: onClose || onCancel,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"modal-h2\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: children || content && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-buttons\",\n        children: [type === 'success' &&\n        /*#__PURE__*/\n        // Success modal: only a close/confirm button\n        _jsxDEV(\"button\", {\n          className: \"modal-button-submit\",\n          onClick: onConfirm || onClose,\n          children: confirmText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), type === 'cancel' &&\n        /*#__PURE__*/\n        // Cancel modal: confirm and cancel buttons\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-button-submit\",\n            onClick: onConfirm,\n            children: confirmText || 'Xác nhận'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-button-reset\",\n            onClick: onClose || onCancel,\n            children: cancelText || 'Hủy'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), !type && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-button-submit\",\n            onClick: onConfirm,\n            children: confirmText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-button-reset\",\n            onClick: onCancel,\n            children: cancelText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = Modala;\nexport default Modala;\nvar _c;\n$RefreshReg$(_c, \"Modala\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Modala","show","type","title","content","onClose","onConfirm","onCancel","confirmText","cancelText","modalClass","children","isVisible","undefined","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/CMC_UNI/CMC_Global/PROJECT/E_Learning/frontend/src/components/Admin/Course/Function/Modala.js"],"sourcesContent":["import React from 'react';\r\nimport '../../Style/adcm.css';\r\n\r\nconst Modala = ({\r\n  show, // For compatibility with AddCourse\r\n  type, // New prop used in EditCourse (\"success\" or \"cancel\")\r\n  title,\r\n  content,\r\n  onClose,\r\n  onConfirm,\r\n  onCancel, // For compatibility with AddCourse\r\n  confirmText = 'OK', // For compatibility with AddCourse\r\n  cancelText = 'Cancel', // For compatibility with AddCourse\r\n  modalClass = 'add-modal', // For compatibility with AddCourse\r\n  children, // For compatibility with AddCourse\r\n}) => {\r\n  // Use 'show' prop for AddCourse compatibility, otherwise assume modal is shown if type/title/content are provided\r\n  const isVisible = show !== undefined ? show : !!(type || title || content);\r\n\r\n  if (!isVisible) return null;\r\n\r\n  return (\r\n    <div className={`modal ${modalClass}`}>\r\n      <div className=\"modal-content\">\r\n        <span className=\"modal-close-btn\" onClick={onClose || onCancel}>×</span>\r\n        <h2 className=\"modal-h2\">{title}</h2>\r\n        <div className=\"modal-body\">\r\n          {children || (content && <p>{content}</p>)}\r\n        </div>\r\n        <div className=\"modal-buttons\">\r\n          {type === 'success' && (\r\n            // Success modal: only a close/confirm button\r\n            <button className=\"modal-button-submit\" onClick={onConfirm || onClose}>\r\n              {confirmText}\r\n            </button>\r\n          )}\r\n          {type === 'cancel' && (\r\n            // Cancel modal: confirm and cancel buttons\r\n            <>\r\n              <button className=\"modal-button-submit\" onClick={onConfirm}>\r\n                {confirmText || 'Xác nhận'}\r\n              </button>\r\n              <button className=\"modal-button-reset\" onClick={onClose || onCancel}>\r\n                {cancelText || 'Hủy'}\r\n              </button>\r\n            </>\r\n          )}\r\n          {/* For AddCourse compatibility: render buttons if type is not specified */}\r\n          {!type && (\r\n            <>\r\n              <button className=\"modal-button-submit\" onClick={onConfirm}>\r\n                {confirmText}\r\n              </button>\r\n              <button className=\"modal-button-reset\" onClick={onCancel}>\r\n                {cancelText}\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modala;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}