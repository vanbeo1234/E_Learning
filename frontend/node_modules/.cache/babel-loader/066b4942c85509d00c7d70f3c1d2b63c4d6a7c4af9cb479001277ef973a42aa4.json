{"ast":null,"code":"var _jsxFileName = \"C:\\\\CMC_UNI\\\\CMC_Global\\\\PROJECT\\\\E_Learning\\\\frontend\\\\src\\\\components\\\\Admin\\\\User\\\\UserManagement.js\",\n  _s2 = $RefreshSig$();\n// File: components/UserManagement/UserManagement.jsx\n// Mô tả: Component React quản lý người dùng với các chức năng tìm kiếm, thêm, chỉnh sửa, vô hiệu hóa/kích hoạt người dùng, và phân trang.\n// Tích hợp API để lấy danh sách người dùng, thêm và cập nhật thông tin. Sử dụng CSS từ adum.css để định dạng giao diện.\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport AddUserModal from './Function/Add'; // Modal để thêm người dùng mới\nimport EditUserModal from './Function/Edit'; // Modal để chỉnh sửa thông tin người dùng\nimport { useUsers } from './Function/useUsers';\nimport './adum.css'; // File CSS chứa các class như user-management-card, table-container, modal, btn, v.v.\nimport { toast } from 'react-toastify'; // Thư viện hiển thị thông báo (toast) cho thành công/lỗi\nimport 'react-toastify/dist/ReactToastify.css'; // CSS của react-toastify\nimport axios from 'axios';\n// Component chính: UserManagement\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserManagement = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  // --- State ---\n\n  // Quản lý trạng thái mở/đóng modal thêm người dùng\n  const [isAddModalOpen, setAddModalOpen] = useState(false);\n\n  // Quản lý trạng thái mở/đóng modal chỉnh sửa người dùng\n  const [isEditModalOpen, setEditModalOpen] = useState(false);\n\n  // Trang hiện tại trong phân trang\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // Số lượng người dùng hiển thị mỗi trang (cố định là 10)\n  const [itemsPerPage] = useState(10);\n\n  // Trạng thái checkbox \"chọn tất cả\" trong bảng\n  const [selectAll, setSelectAll] = useState(false);\n\n  // Danh sách ID của người dùng được chọn qua checkbox\n  const [selectedUsers, setSelectedUsers] = useState([]);\n\n  // Tiêu chí tìm kiếm (tên, ngày sinh, vai trò, trạng thái)\n  const [searchCriteria, setSearchCriteria] = useState({\n    name: '',\n    dob: '',\n    role: '',\n    status: ''\n  });\n\n  // Dữ liệu form cho thêm/chỉnh sửa người dùng, chứa thông tin chi tiết\n  const [formData, setFormData] = useState({\n    id: null,\n    // Mã người dùng\n    name: '',\n    // Họ và tên\n    email: '',\n    // Email\n    password: '',\n    // Mật khẩu\n    confirmPassword: '',\n    // Xác nhận mật khẩu\n    gender: '',\n    // Giới tính (Nam/Nữ)\n    phone: '',\n    // Số điện thoại\n    phoneCode: '+84',\n    // Mã vùng điện thoại (mặc định +84)\n    address: '',\n    // Địa chỉ\n    dob: '',\n    // Ngày sinh\n    role: '',\n    // Vai trò (Học viên/Giảng viên/Quản lý)\n    status: 'Hoạt động',\n    // Trạng thái (Hoạt động/Không hoạt động)\n    experience: 0,\n    // Số năm kinh nghiệm\n    certifications: [] // Danh sách chứng chỉ\n  });\n\n  // Danh sách người dùng đã lọc từ API\n  const [filteredUsers, setFilteredUsers] = useState([]);\n\n  // Danh sách chứng chỉ khả dụng để chọn trong modal\n  const availableCertificates = [\"Chứng chỉ A\", \"Chứng chỉ B\", \"Chứng chỉ C\"];\n\n  // --- API Config ---\n\n  // URL API để gọi các endpoint\n  const API_URL = 'http://localhost:8081/v1/api/user';\n\n  // Token xác thực lấy từ localStorage\n  const token = localStorage.getItem('access_token');\n\n  // --- Helper Functions ---\n\n  // Hàm chuyển đổi ngày sang định dạng ISO (YYYY-MM-DD) để gửi API\n  const convertToISODate = inputDate => {\n    if (!inputDate) return '';\n    const date = new Date(inputDate);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  };\n\n  // --- Effects ---\n  const UserTable = ({\n    users\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      style: {\n        overflowX: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        width: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"M\\xE3 ng\\u01B0\\u1EDDi d\\xF9ng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"T\\xEAn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Ng\\xE0y sinh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Vai tr\\xF2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tr\\u1EA1ng th\\xE1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Kinh nghi\\u1EC7m\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Ch\\u1EE9ng ch\\u1EC9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Gi\\u1EDBi t\\xEDnh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.length > 0 ? users.map((user, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.userCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.dateOfBirth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.statusCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.experience\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.certification\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"10\",\n              style: {\n                textAlign: 'center'\n              },\n              children: \"Kh\\xF4ng c\\xF3 d\\u1EEF li\\u1EC7u\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  };\n  const UserManagement = () => {\n    _s();\n    const [searchParams, setSearchParams] = useState({\n      name: '',\n      dateOfBirth: '',\n      roleId: '',\n      statusCode: ''\n    });\n    const {\n      users,\n      pagination,\n      loading,\n      fetchUsers\n    } = useUsers();\n\n    // Gọi API khi component mount\n    useEffect(() => {\n      fetchUsers();\n    }, []);\n\n    // Xử lý input\n    const handleInputChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      setSearchParams({\n        ...searchParams,\n        [name]: value\n      });\n    };\n\n    // Xử lý tìm kiếm\n    const handleSearch = () => {\n      const rawParams = {\n        ...searchParams,\n        dateOfBirth: searchParams.dateOfBirth ? `${searchParams.dateOfBirth}T00:00:00` : undefined\n      };\n      const cleanedParams = Object.fromEntries(Object.entries(rawParams).filter(([_, value]) => value !== '' && value !== undefined));\n      fetchUsers(cleanedParams);\n    };\n    // --- Handlers ---\n\n    // Xử lý thêm người dùng mới qua API\n    const handleAddUser = async () => {\n      const roleId = formData.role === \"Giảng viên\" ? 2 : formData.role === \"Học viên\" ? 3 : 1; // Chuyển vai trò sang ID\n      const body = {\n        userCode: formData.id,\n        name: formData.name,\n        email: formData.email,\n        password: formData.password,\n        confirmPassword: formData.confirmPassword || formData.password,\n        gender: formData.gender === \"Nam\" ? 1 : 0,\n        dateOfBirth: convertToISODate(formData.dob),\n        address: formData.address,\n        phone: `${formData.phoneCode}${formData.phone}`,\n        roleId: roleId,\n        statusCode: formData.status === \"Hoạt động\" ? \"ACTIVE\" : \"INACTIVE\",\n        certification: formData.certifications.join(\",\"),\n        ...(roleId === 1 ? {\n          createdBy: \"admin\"\n        } : {}) // Thêm createdBy nếu là Quản lý\n      };\n      try {\n        const res = await fetch(\"http://localhost:8081/v1/api/auth/register\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}` // Token từ localStorage\n          },\n          body: JSON.stringify(body)\n        });\n        const data = await res.json();\n        console.warn(\"🧾 Registration response:\\n\", JSON.stringify(data, null, 2)); // Log phản hồi API\n\n        if (data.errorStatus === 900) {\n          // Kiểm tra trạng thái thành công\n          toast.success(\"Thêm người dùng thành công!\");\n          fetchUsers(); // Làm mới danh sách\n          setAddModalOpen(false); // Đóng modal\n          resetForm(); // Reset form\n        } else {\n          toast.error(data.message || \"Đăng ký thất bại!\");\n        }\n      } catch (err) {\n        console.error(\"Error in handleAddUser:\", err);\n        toast.error(\"Lỗi mạng hoặc token không hợp lệ. Vui lòng đăng nhập lại.\");\n      }\n    };\n\n    // Thêm chứng chỉ vào formData (tối đa 10 chứng chỉ)\n    const addCertificate = certificate => {\n      if (formData.certifications.length < 10 && !formData.certifications.includes(certificate)) {\n        setFormData(prev => ({\n          ...prev,\n          certifications: [...prev.certifications, certificate]\n        }));\n      }\n    };\n\n    // Xóa chứng chỉ khỏi formData\n    const removeCertificate = certificate => {\n      setFormData(prev => ({\n        ...prev,\n        certifications: prev.certifications.filter(item => item !== certificate)\n      }));\n    };\n\n    // Chọn/tắt chọn tất cả người dùng trong bảng\n    const toggleSelectAll = () => {\n      setSelectedUsers(selectAll ? [] : filteredUsers.map(u => u.id));\n      setSelectAll(!selectAll);\n    };\n\n    // Xử lý chọn từng người dùng qua checkbox\n    const handleCheckboxChange = id => {\n      setSelectedUsers(prev => prev.includes(id) ? prev.filter(uid => uid !== id) : [...prev, id]);\n    };\n\n    // Mở modal chỉnh sửa và điền dữ liệu người dùng\n    const handleEditUser = user => {\n      setFormData(user);\n      setEditModalOpen(true);\n    };\n\n    // Cập nhật thông tin người dùng qua API\n    const handleUpdateUser = async () => {\n      try {\n        const updatePayload = {\n          userCode: formData.id,\n          phone: formData.phone,\n          address: formData.address,\n          statusCode: formData.status === 'Hoạt động' ? 'ACTIVE' : 'INACTIVE',\n          experience: formData.experience,\n          certification: formData.certifications.join(',')\n        };\n        const res = await fetch(`${API_URL}/update`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify(updatePayload)\n        });\n        const data = await res.json();\n        if (data.errorStatus === 900) {\n          fetchUsers(); // Làm mới danh sách\n          setEditModalOpen(false); // Đóng modal\n          resetForm(); // Reset form\n          toast.success(\"Cập nhật người dùng thành công!\");\n        } else {\n          toast.error(data.message || \"Cập nhật thất bại!\");\n        }\n      } catch (error) {\n        console.error('Update user error:', error);\n        toast.error(\"Lỗi khi cập nhật người dùng!\");\n      }\n    };\n\n    // Cập nhật tiêu chí tìm kiếm khi người dùng nhập\n    const handleSearchChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      setSearchCriteria(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    };\n\n    // Reset form về trạng thái mặc định\n    const resetForm = () => {\n      setFormData({\n        id: null,\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        gender: '',\n        phone: '',\n        phoneCode: '+84',\n        address: '',\n        dob: '',\n        role: '',\n        status: 'Hoạt động',\n        experience: 0,\n        certifications: []\n      });\n    };\n\n    // Chuyển trang phân trang\n    const handlePageChange = pageNumber => {\n      setCurrentPage(pageNumber);\n    };\n\n    // Vô hiệu hóa các người dùng được chọn\n    const disableSelected = () => {\n      const updated = filteredUsers.map(user => selectedUsers.includes(user.id) ? {\n        ...user,\n        status: 'Không hoạt động'\n      } : user);\n      setFilteredUsers(updated);\n      setSelectedUsers([]);\n      setSelectAll(false);\n      toast.success(\"Vô hiệu hóa người dùng thành công!\");\n    };\n\n    // Kích hoạt các người dùng được chọn\n    const enableSelected = () => {\n      const updated = filteredUsers.map(user => selectedUsers.includes(user.id) ? {\n        ...user,\n        status: 'Hoạt động'\n      } : user);\n      setFilteredUsers(updated);\n      setSelectedUsers([]);\n      setSelectAll(false);\n      toast.success(\"Kích hoạt người dùng thành công!\");\n    };\n\n    // --- Phân trang ---\n\n    // Tính tổng số trang\n    const totalPages = Math.ceil(filteredUsers.length / itemsPerPage);\n\n    // Lấy danh sách người dùng cho trang hiện tại\n    const currentUsers = filteredUsers.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n\n    // --- Render ---\n\n    return (\n      /*#__PURE__*/\n      // Container chính của component\n      _jsxDEV(\"div\", {\n        className: \"user-management-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Danh s\\xE1ch ng\\u01B0\\u1EDDi d\\xF9ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '16px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              placeholder: \"T\\xEAn\",\n              value: searchParams.name,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"dateOfBirth\",\n              value: searchParams.dateOfBirth,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"roleId\",\n              value: searchParams.roleId,\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Ch\\u1ECDn vai tr\\xF2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"Qu\\u1EA3n l\\xFD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"Gi\\u1EA3ng vi\\xEAn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"H\\u1ECDc vi\\xEAn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"statusCode\",\n              value: searchParams.statusCode,\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Ch\\u1ECDn tr\\u1EA1ng th\\xE1i\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ACTIVE\",\n                children: \"Ho\\u1EA1t \\u0111\\u1ED9ng\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"INACTIVE\",\n                children: \"V\\xF4 hi\\u1EC7u h\\xF3a\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSearch,\n              disabled: loading,\n              children: loading ? 'Đang tìm...' : 'Tìm kiếm'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(UserTable, {\n            users: users\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 7\n          }, this), pagination.totalPages && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Trang hi\\u1EC7n t\\u1EA1i: \", pagination.currentPage + 1, \" / \", pagination.totalPages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-management-action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-green\",\n            onClick: () => setAddModalOpen(true),\n            children: \"Th\\xEAm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-red\",\n            onClick: disableSelected,\n            children: \"V\\xF4 hi\\u1EC7u h\\xF3a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-yellow\",\n            onClick: enableSelected,\n            children: \"K\\xEDch ho\\u1EA1t\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-blue\",\n            onClick: handleSearch,\n            children: \"T\\xECm ki\\u1EBFm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), isAddModalOpen && /*#__PURE__*/_jsxDEV(AddUserModal, {\n          formData: formData,\n          setFormData: setFormData,\n          handleAddUser: handleAddUser,\n          setAddModalOpen: setAddModalOpen,\n          availableCertificates: availableCertificates,\n          addCertificate: addCertificate,\n          removeCertificate: removeCertificate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 9\n        }, this), isEditModalOpen && /*#__PURE__*/_jsxDEV(EditUserModal, {\n          formData: formData,\n          setFormData: setFormData,\n          handleUpdateUser: handleUpdateUser,\n          setEditModalOpen: setEditModalOpen,\n          availableCertificates: availableCertificates,\n          addCertificate: addCertificate,\n          removeCertificate: removeCertificate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 5\n      }, this)\n    );\n  };\n  _s(UserManagement, \"ShBTfmgSHI+3AidErPQL19YyqIs=\", false, function () {\n    return [useUsers];\n  });\n};\n_s2(UserManagement, \"WrsbYZdYkmrA5ZVCmCinsityaiQ=\");\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","AddUserModal","EditUserModal","useUsers","toast","axios","jsxDEV","_jsxDEV","UserManagement","_s2","_s","$RefreshSig$","isAddModalOpen","setAddModalOpen","isEditModalOpen","setEditModalOpen","currentPage","setCurrentPage","itemsPerPage","selectAll","setSelectAll","selectedUsers","setSelectedUsers","searchCriteria","setSearchCriteria","name","dob","role","status","formData","setFormData","id","email","password","confirmPassword","gender","phone","phoneCode","address","experience","certifications","filteredUsers","setFilteredUsers","availableCertificates","API_URL","token","localStorage","getItem","convertToISODate","inputDate","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","UserTable","users","className","style","overflowX","children","border","width","fileName","_jsxFileName","lineNumber","columnNumber","length","map","user","idx","userCode","dateOfBirth","statusCode","certification","colSpan","textAlign","searchParams","setSearchParams","roleId","pagination","loading","fetchUsers","handleInputChange","e","value","target","handleSearch","rawParams","undefined","cleanedParams","Object","fromEntries","entries","filter","_","handleAddUser","body","join","createdBy","res","fetch","method","headers","Authorization","JSON","stringify","data","json","console","warn","errorStatus","success","resetForm","error","message","err","addCertificate","certificate","includes","prev","removeCertificate","item","toggleSelectAll","u","handleCheckboxChange","uid","handleEditUser","handleUpdateUser","updatePayload","handleSearchChange","event","handlePageChange","pageNumber","disableSelected","updated","enableSelected","totalPages","Math","ceil","currentUsers","slice","marginBottom","type","placeholder","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/CMC_UNI/CMC_Global/PROJECT/E_Learning/frontend/src/components/Admin/User/UserManagement.js"],"sourcesContent":["// File: components/UserManagement/UserManagement.jsx\r\n// Mô tả: Component React quản lý người dùng với các chức năng tìm kiếm, thêm, chỉnh sửa, vô hiệu hóa/kích hoạt người dùng, và phân trang.\r\n// Tích hợp API để lấy danh sách người dùng, thêm và cập nhật thông tin. Sử dụng CSS từ adum.css để định dạng giao diện.\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport AddUserModal from './Function/Add'; // Modal để thêm người dùng mới\r\nimport EditUserModal from './Function/Edit'; // Modal để chỉnh sửa thông tin người dùng\r\nimport { useUsers } from './Function/useUsers';import './adum.css'; // File CSS chứa các class như user-management-card, table-container, modal, btn, v.v.\r\nimport { toast } from 'react-toastify'; // Thư viện hiển thị thông báo (toast) cho thành công/lỗi\r\nimport 'react-toastify/dist/ReactToastify.css'; // CSS của react-toastify\r\nimport axios from 'axios';\r\n// Component chính: UserManagement\r\nconst UserManagement = () => {\r\n  \r\n  // --- State ---\r\n\r\n  // Quản lý trạng thái mở/đóng modal thêm người dùng\r\n  const [isAddModalOpen, setAddModalOpen] = useState(false);\r\n\r\n  // Quản lý trạng thái mở/đóng modal chỉnh sửa người dùng\r\n  const [isEditModalOpen, setEditModalOpen] = useState(false);\r\n\r\n  // Trang hiện tại trong phân trang\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  // Số lượng người dùng hiển thị mỗi trang (cố định là 10)\r\n  const [itemsPerPage] = useState(10);\r\n\r\n  // Trạng thái checkbox \"chọn tất cả\" trong bảng\r\n  const [selectAll, setSelectAll] = useState(false);\r\n\r\n  // Danh sách ID của người dùng được chọn qua checkbox\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n\r\n  // Tiêu chí tìm kiếm (tên, ngày sinh, vai trò, trạng thái)\r\n  const [searchCriteria, setSearchCriteria] = useState({ name: '', dob: '', role: '', status: '' });\r\n\r\n  // Dữ liệu form cho thêm/chỉnh sửa người dùng, chứa thông tin chi tiết\r\n  const [formData, setFormData] = useState({\r\n    id: null, // Mã người dùng\r\n    name: '', // Họ và tên\r\n    email: '', // Email\r\n    password: '', // Mật khẩu\r\n    confirmPassword: '', // Xác nhận mật khẩu\r\n    gender: '', // Giới tính (Nam/Nữ)\r\n    phone: '', // Số điện thoại\r\n    phoneCode: '+84', // Mã vùng điện thoại (mặc định +84)\r\n    address: '', // Địa chỉ\r\n    dob: '', // Ngày sinh\r\n    role: '', // Vai trò (Học viên/Giảng viên/Quản lý)\r\n    status: 'Hoạt động', // Trạng thái (Hoạt động/Không hoạt động)\r\n    experience: 0, // Số năm kinh nghiệm\r\n    certifications: [] // Danh sách chứng chỉ\r\n  });\r\n\r\n  // Danh sách người dùng đã lọc từ API\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n\r\n  // Danh sách chứng chỉ khả dụng để chọn trong modal\r\n  const availableCertificates = [\"Chứng chỉ A\", \"Chứng chỉ B\", \"Chứng chỉ C\"];\r\n\r\n  // --- API Config ---\r\n\r\n  // URL API để gọi các endpoint\r\n  const API_URL = 'http://localhost:8081/v1/api/user';\r\n\r\n  // Token xác thực lấy từ localStorage\r\n  const token = localStorage.getItem('access_token');\r\n\r\n  // --- Helper Functions ---\r\n\r\n  // Hàm chuyển đổi ngày sang định dạng ISO (YYYY-MM-DD) để gửi API\r\n  const convertToISODate = (inputDate) => {\r\n    if (!inputDate) return '';\r\n    const date = new Date(inputDate);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n\r\n  // --- Effects ---\r\n  const UserTable = ({ users }) => {\r\n    return (\r\n      <div className=\"table-container\" style={{ overflowX: 'auto' }}>\r\n        <table border=\"1\" width=\"100%\">\r\n          <thead>\r\n            <tr>\r\n              <th>Mã người dùng</th>\r\n              <th>Tên</th>\r\n              <th>Email</th>\r\n              <th>Số điện thoại</th>\r\n              <th>Ngày sinh</th>\r\n              <th>Vai trò</th>\r\n              <th>Trạng thái</th>\r\n              <th>Kinh nghiệm</th>\r\n              <th>Chứng chỉ</th>\r\n              <th>Giới tính</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.length > 0 ? (\r\n              users.map((user, idx) => (\r\n                <tr key={idx}>\r\n                  <td>{user.userCode}</td>\r\n                  <td>{user.name}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>{user.phone}</td>\r\n                  <td>{user.dateOfBirth}</td>\r\n                  <td>{user.role}</td>\r\n                  <td>{user.statusCode}</td>\r\n                  <td>{user.experience}</td>\r\n                  <td>{user.certification}</td>\r\n                  <td>{user.gender}</td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"10\" style={{ textAlign: 'center' }}>\r\n                  Không có dữ liệu\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n  const UserManagement = () => {\r\n    const [searchParams, setSearchParams] = useState({\r\n      name: '',\r\n      dateOfBirth: '',\r\n      roleId: '',\r\n      statusCode: '',\r\n    });\r\n  \r\n    const { users, pagination, loading, fetchUsers } = useUsers();\r\n  \r\n    // Gọi API khi component mount\r\n    useEffect(() => {\r\n      fetchUsers();\r\n    }, []);\r\n  \r\n    // Xử lý input\r\n    const handleInputChange = (e) => {\r\n      const { name, value } = e.target;\r\n      setSearchParams({ ...searchParams, [name]: value });\r\n    };\r\n  \r\n    // Xử lý tìm kiếm\r\n    const handleSearch = () => {\r\n      const rawParams = {\r\n        ...searchParams,\r\n        dateOfBirth: searchParams.dateOfBirth\r\n          ? `${searchParams.dateOfBirth}T00:00:00`\r\n          : undefined,\r\n      };\r\n  \r\n      const cleanedParams = Object.fromEntries(\r\n        Object.entries(rawParams).filter(\r\n          ([_, value]) => value !== '' && value !== undefined\r\n        )\r\n      );\r\n  \r\n      fetchUsers(cleanedParams);\r\n    };\r\n  // --- Handlers ---\r\n\r\n  // Xử lý thêm người dùng mới qua API\r\n  const handleAddUser = async () => {\r\n    const roleId = formData.role === \"Giảng viên\" ? 2 : formData.role === \"Học viên\" ? 3 : 1; // Chuyển vai trò sang ID\r\n    const body = {\r\n      userCode: formData.id,\r\n      name: formData.name,\r\n      email: formData.email,\r\n      password: formData.password,\r\n      confirmPassword: formData.confirmPassword || formData.password,\r\n      gender: formData.gender === \"Nam\" ? 1 : 0,\r\n      dateOfBirth: convertToISODate(formData.dob),\r\n      address: formData.address,\r\n      phone: `${formData.phoneCode}${formData.phone}`,\r\n      roleId: roleId,\r\n      statusCode: formData.status === \"Hoạt động\" ? \"ACTIVE\" : \"INACTIVE\",\r\n      certification: formData.certifications.join(\",\"),\r\n      ...(roleId === 1 ? { createdBy: \"admin\" } : {}), // Thêm createdBy nếu là Quản lý\r\n    };\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:8081/v1/api/auth/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`, // Token từ localStorage\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.warn(\"🧾 Registration response:\\n\", JSON.stringify(data, null, 2)); // Log phản hồi API\r\n\r\n      if (data.errorStatus === 900) { // Kiểm tra trạng thái thành công\r\n        toast.success(\"Thêm người dùng thành công!\");\r\n        fetchUsers(); // Làm mới danh sách\r\n        setAddModalOpen(false); // Đóng modal\r\n        resetForm(); // Reset form\r\n      } else {\r\n        toast.error(data.message || \"Đăng ký thất bại!\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error in handleAddUser:\", err);\r\n      toast.error(\"Lỗi mạng hoặc token không hợp lệ. Vui lòng đăng nhập lại.\");\r\n    }\r\n  };\r\n\r\n  // Thêm chứng chỉ vào formData (tối đa 10 chứng chỉ)\r\n  const addCertificate = (certificate) => {\r\n    if (formData.certifications.length < 10 && !formData.certifications.includes(certificate)) {\r\n      setFormData(prev => ({ ...prev, certifications: [...prev.certifications, certificate] }));\r\n    }\r\n  };\r\n\r\n  // Xóa chứng chỉ khỏi formData\r\n  const removeCertificate = (certificate) => {\r\n    setFormData(prev => ({ ...prev, certifications: prev.certifications.filter(item => item !== certificate) }));\r\n  };\r\n\r\n  // Chọn/tắt chọn tất cả người dùng trong bảng\r\n  const toggleSelectAll = () => {\r\n    setSelectedUsers(selectAll ? [] : filteredUsers.map(u => u.id));\r\n    setSelectAll(!selectAll);\r\n  };\r\n\r\n  // Xử lý chọn từng người dùng qua checkbox\r\n  const handleCheckboxChange = (id) => {\r\n    setSelectedUsers(prev => prev.includes(id) ? prev.filter(uid => uid !== id) : [...prev, id]);\r\n  };\r\n\r\n  // Mở modal chỉnh sửa và điền dữ liệu người dùng\r\n  const handleEditUser = (user) => {\r\n    setFormData(user);\r\n    setEditModalOpen(true);\r\n  };\r\n\r\n  // Cập nhật thông tin người dùng qua API\r\n  const handleUpdateUser = async () => {\r\n    try {\r\n      const updatePayload = {\r\n        userCode: formData.id,\r\n        phone: formData.phone,\r\n        address: formData.address,\r\n        statusCode: formData.status === 'Hoạt động' ? 'ACTIVE' : 'INACTIVE',\r\n        experience: formData.experience,\r\n        certification: formData.certifications.join(',')\r\n      };\r\n      const res = await fetch(`${API_URL}/update`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(updatePayload)\r\n      });\r\n      const data = await res.json();\r\n      if (data.errorStatus === 900) {\r\n        fetchUsers(); // Làm mới danh sách\r\n        setEditModalOpen(false); // Đóng modal\r\n        resetForm(); // Reset form\r\n        toast.success(\"Cập nhật người dùng thành công!\");\r\n      } else {\r\n        toast.error(data.message || \"Cập nhật thất bại!\");\r\n      }\r\n    } catch (error) {\r\n      console.error('Update user error:', error);\r\n      toast.error(\"Lỗi khi cập nhật người dùng!\");\r\n    }\r\n  };\r\n\r\n  // Cập nhật tiêu chí tìm kiếm khi người dùng nhập\r\n  const handleSearchChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setSearchCriteria(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n\r\n  // Reset form về trạng thái mặc định\r\n  const resetForm = () => {\r\n    setFormData({\r\n      id: null,\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      gender: '',\r\n      phone: '',\r\n      phoneCode: '+84',\r\n      address: '',\r\n      dob: '',\r\n      role: '',\r\n      status: 'Hoạt động',\r\n      experience: 0,\r\n      certifications: []\r\n    });\r\n  };\r\n\r\n  // Chuyển trang phân trang\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Vô hiệu hóa các người dùng được chọn\r\n  const disableSelected = () => {\r\n    const updated = filteredUsers.map(user => \r\n      selectedUsers.includes(user.id) ? { ...user, status: 'Không hoạt động' } : user\r\n    );\r\n    setFilteredUsers(updated);\r\n    setSelectedUsers([]);\r\n    setSelectAll(false);\r\n    toast.success(\"Vô hiệu hóa người dùng thành công!\");\r\n  };\r\n\r\n  // Kích hoạt các người dùng được chọn\r\n  const enableSelected = () => {\r\n    const updated = filteredUsers.map(user => \r\n      selectedUsers.includes(user.id) ? { ...user, status: 'Hoạt động' } : user\r\n    );\r\n    setFilteredUsers(updated);\r\n    setSelectedUsers([]);\r\n    setSelectAll(false);\r\n    toast.success(\"Kích hoạt người dùng thành công!\");\r\n  };\r\n\r\n  // --- Phân trang ---\r\n\r\n  // Tính tổng số trang\r\n  const totalPages = Math.ceil(filteredUsers.length / itemsPerPage);\r\n\r\n  // Lấy danh sách người dùng cho trang hiện tại\r\n  const currentUsers = filteredUsers.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\r\n\r\n  // --- Render ---\r\n\r\n  return (\r\n    // Container chính của component\r\n    <div className=\"user-management-container\">\r\n      <div>\r\n      <h2>Danh sách người dùng</h2>\r\n\r\n      {/* Form tìm kiếm */}\r\n      <div style={{ marginBottom: '16px' }}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Tên\"\r\n          value={searchParams.name}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"dateOfBirth\"\r\n          value={searchParams.dateOfBirth}\r\n          onChange={handleInputChange}\r\n        />\r\n        <select\r\n          name=\"roleId\"\r\n          value={searchParams.roleId}\r\n          onChange={handleInputChange}\r\n        >\r\n          <option value=\"\">Chọn vai trò</option>\r\n          <option value=\"1\">Quản lý</option>\r\n          <option value=\"2\">Giảng viên</option>\r\n          <option value=\"3\">Học viên</option>\r\n        </select>\r\n        <select\r\n          name=\"statusCode\"\r\n          value={searchParams.statusCode}\r\n          onChange={handleInputChange}\r\n        >\r\n          <option value=\"\">Chọn trạng thái</option>\r\n          <option value=\"ACTIVE\">Hoạt động</option>\r\n          <option value=\"INACTIVE\">Vô hiệu hóa</option>\r\n        </select>\r\n        <button onClick={handleSearch} disabled={loading}>\r\n          {loading ? 'Đang tìm...' : 'Tìm kiếm'}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Bảng người dùng */}\r\n      <UserTable users={users} />\r\n\r\n      {/* Phân trang nếu có */}\r\n      {pagination.totalPages && (\r\n        <p>\r\n          Trang hiện tại: {pagination.currentPage + 1} / {pagination.totalPages}\r\n        </p>\r\n      )}\r\n    </div>\r\n\r\n\r\n          {/* Các nút hành động: Thêm, Vô hiệu hóa, Kích hoạt, Tìm kiếm */}\r\n          <div className=\"user-management-action-buttons\">\r\n              <button className=\"btn btn-green\" onClick={() => setAddModalOpen(true)}>\r\n                Thêm\r\n              </button>\r\n              <button className=\"btn btn-red\" onClick={disableSelected}>\r\n                Vô hiệu hóa\r\n              </button>\r\n              <button className=\"btn btn-yellow\" onClick={enableSelected}>\r\n                Kích hoạt\r\n              </button>\r\n              <button className=\"btn btn-blue\" onClick={handleSearch}>\r\n                Tìm kiếm\r\n              </button>\r\n        </div>\r\n\r\n\r\n      {/* Modal thêm người dùng */}\r\n      {isAddModalOpen && (\r\n        <AddUserModal\r\n          formData={formData}\r\n          setFormData={setFormData}\r\n          handleAddUser={handleAddUser}\r\n          setAddModalOpen={setAddModalOpen}\r\n          availableCertificates={availableCertificates}\r\n          addCertificate={addCertificate}\r\n          removeCertificate={removeCertificate}\r\n        />\r\n      )}\r\n\r\n      {/* Modal chỉnh sửa người dùng */}\r\n      {isEditModalOpen && (\r\n        <EditUserModal\r\n          formData={formData}\r\n          setFormData={setFormData}\r\n          handleUpdateUser={handleUpdateUser}\r\n          setEditModalOpen={setEditModalOpen}\r\n          availableCertificates={availableCertificates}\r\n          addCertificate={addCertificate}\r\n          removeCertificate={removeCertificate}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n}\r\nexport default UserManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}